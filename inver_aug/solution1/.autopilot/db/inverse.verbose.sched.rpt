

================================================================
== Vivado HLS Report for 'inverse'
================================================================
* Date:           Wed Jul 31 03:37:28 2024

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        inver_aug
* Solution:       solution1
* Product family: zynquplus
* Target device:  xqzu5ev-ffrb900-1-i


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 7.163 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+----------+------+-------+---------+
    |  Latency (cycles) |  Latency (absolute)  |   Interval   | Pipeline|
    |   min   |   max   |    min    |    max   |  min |  max  |   Type  |
    +---------+---------+-----------+----------+------+-------+---------+
    |     8595|    12695| 85.950 us | 0.127 ms |  8595|  12695|   none  |
    +---------+---------+-----------+----------+------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------------+---------+---------+------------+-----------+-----------+------+----------+
        |                        |  Latency (cycles) |  Iteration |  Initiation Interval  | Trip |          |
        |        Loop Name       |   min   |   max   |   Latency  |  achieved |   target  | Count| Pipelined|
        +------------------------+---------+---------+------------+-----------+-----------+------+----------+
        |- Ini_Aug_loop          |      100|      100|          10|         10|          1|    10|    yes   |
        |- Row_Operation         |     8440|    12540| 844 ~ 1254 |          -|          -|    10|    no    |
        | + Row_Operation.1      |      820|      820|          41|          -|          -|    20|    no    |
        | + Row_Operation.2      |       20|      430|   2 ~ 43   |          -|          -|    10|    no    |
        |  ++ Row_Operation.2.1  |       40|       40|           2|          -|          -|    20|    no    |
        |- Extract_loop          |       50|       50|           6|          5|          1|    10|    yes   |
        +------------------------+---------+---------+------------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 10, depth = 10
  * Pipeline-1: initiation interval (II) = 5, depth = 6


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 66
* Pipeline : 2
  Pipeline-0 : II = 10, D = 10, States = { 2 3 4 5 6 7 8 9 10 11 }
  Pipeline-1 : II = 5, D = 6, States = { 60 61 62 63 64 65 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 12 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 2 
12 --> 13 
13 --> 14 60 
14 --> 15 
15 --> 16 56 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 45 
45 --> 46 
46 --> 47 
47 --> 48 
48 --> 49 
49 --> 50 
50 --> 51 
51 --> 52 
52 --> 53 
53 --> 54 
54 --> 55 
55 --> 15 
56 --> 57 58 13 
57 --> 58 
58 --> 59 56 
59 --> 58 
60 --> 66 61 
61 --> 62 
62 --> 63 
63 --> 64 
64 --> 65 
65 --> 60 
66 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.75>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([100 x i32]* %A), !map !88"   --->   Operation 67 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([100 x i22]* %B_V), !map !94"   --->   Operation 68 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([8 x i8]* @inverse_str) nounwind"   --->   Operation 69 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%aug_V = alloca [200 x i22], align 4" [inver_aug.cpp:30]   --->   Operation 70 'alloca' 'aug_V' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_1 : Operation 71 [1/1] (0.75ns)   --->   "br label %.preheader184" [inver_aug.cpp:34]   --->   Operation 71 'br' <Predicate = true> <Delay = 0.75>

State 2 <SV = 1> <Delay = 3.17>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%i_0 = phi i4 [ %i, %Ini_Aug_loop ], [ 0, %.preheader184.preheader ]"   --->   Operation 72 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 73 [1/1] (0.88ns)   --->   "%icmp_ln34 = icmp eq i4 %i_0, -6" [inver_aug.cpp:34]   --->   Operation 73 'icmp' 'icmp_ln34' <Predicate = true> <Delay = 0.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)"   --->   Operation 74 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (0.86ns)   --->   "%i = add i4 %i_0, 1" [inver_aug.cpp:34]   --->   Operation 75 'add' 'i' <Predicate = true> <Delay = 0.86> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "br i1 %icmp_ln34, label %.preheader182.preheader, label %Ini_Aug_loop" [inver_aug.cpp:34]   --->   Operation 76 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 77 [1/1] (0.00ns)   --->   "%tmp_s = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %i_0, i3 0)" [inver_aug.cpp:37]   --->   Operation 77 'bitconcatenate' 'tmp_s' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%zext_ln37 = zext i7 %tmp_s to i8" [inver_aug.cpp:37]   --->   Operation 78 'zext' 'zext_ln37' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_1 = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %i_0, i1 false)" [inver_aug.cpp:37]   --->   Operation 79 'bitconcatenate' 'tmp_1' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_2 : Operation 80 [1/1] (0.00ns)   --->   "%zext_ln37_1 = zext i5 %tmp_1 to i8" [inver_aug.cpp:37]   --->   Operation 80 'zext' 'zext_ln37_1' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_2 : Operation 81 [1/1] (0.89ns)   --->   "%add_ln37 = add i8 %zext_ln37_1, %zext_ln37" [inver_aug.cpp:37]   --->   Operation 81 'add' 'add_ln37' <Predicate = (!icmp_ln34)> <Delay = 0.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 82 [1/1] (0.00ns)   --->   "%zext_ln37_2 = zext i8 %add_ln37 to i64" [inver_aug.cpp:37]   --->   Operation 82 'zext' 'zext_ln37_2' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_2 : Operation 83 [1/1] (0.00ns)   --->   "%A_addr = getelementptr [100 x i32]* %A, i64 0, i64 %zext_ln37_2" [inver_aug.cpp:37]   --->   Operation 83 'getelementptr' 'A_addr' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_2 : Operation 84 [1/1] (0.00ns)   --->   "%or_ln37 = or i8 %add_ln37, 1" [inver_aug.cpp:37]   --->   Operation 84 'or' 'or_ln37' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_2 : Operation 85 [1/1] (0.00ns)   --->   "%zext_ln37_3 = zext i8 %or_ln37 to i64" [inver_aug.cpp:37]   --->   Operation 85 'zext' 'zext_ln37_3' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_2 : Operation 86 [1/1] (0.00ns)   --->   "%A_addr_1 = getelementptr [100 x i32]* %A, i64 0, i64 %zext_ln37_3" [inver_aug.cpp:37]   --->   Operation 86 'getelementptr' 'A_addr_1' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_2 : Operation 87 [1/1] (0.00ns)   --->   "%tmp_3 = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %i_0, i4 0)" [inver_aug.cpp:37]   --->   Operation 87 'bitconcatenate' 'tmp_3' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_2 : Operation 88 [1/1] (0.00ns)   --->   "%zext_ln203 = zext i8 %tmp_3 to i9" [inver_aug.cpp:37]   --->   Operation 88 'zext' 'zext_ln203' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_2 : Operation 89 [1/1] (0.00ns)   --->   "%tmp_5 = call i6 @_ssdm_op_BitConcatenate.i6.i4.i2(i4 %i_0, i2 0)" [inver_aug.cpp:37]   --->   Operation 89 'bitconcatenate' 'tmp_5' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_2 : Operation 90 [1/1] (0.00ns)   --->   "%zext_ln203_1 = zext i6 %tmp_5 to i9" [inver_aug.cpp:37]   --->   Operation 90 'zext' 'zext_ln203_1' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_2 : Operation 91 [1/1] (0.90ns)   --->   "%add_ln203 = add i9 %zext_ln203_1, %zext_ln203" [inver_aug.cpp:37]   --->   Operation 91 'add' 'add_ln203' <Predicate = (!icmp_ln34)> <Delay = 0.90> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 92 [1/1] (0.92ns)   --->   "%add_ln203_7 = add i9 %add_ln203, 10" [inver_aug.cpp:41]   --->   Operation 92 'add' 'add_ln203_7' <Predicate = (!icmp_ln34)> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 93 [1/1] (0.00ns)   --->   "%sext_ln203_6 = sext i9 %add_ln203_7 to i64" [inver_aug.cpp:41]   --->   Operation 93 'sext' 'sext_ln203_6' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_2 : Operation 94 [1/1] (0.00ns)   --->   "%aug_V_addr_15 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %sext_ln203_6" [inver_aug.cpp:41]   --->   Operation 94 'getelementptr' 'aug_V_addr_15' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_2 : Operation 95 [1/1] (0.92ns)   --->   "%add_ln203_8 = add i9 %add_ln203, 11" [inver_aug.cpp:41]   --->   Operation 95 'add' 'add_ln203_8' <Predicate = (!icmp_ln34)> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 96 [1/1] (0.00ns)   --->   "%sext_ln203_7 = sext i9 %add_ln203_8 to i64" [inver_aug.cpp:41]   --->   Operation 96 'sext' 'sext_ln203_7' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_2 : Operation 97 [1/1] (0.00ns)   --->   "%aug_V_addr_26 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %sext_ln203_7" [inver_aug.cpp:41]   --->   Operation 97 'getelementptr' 'aug_V_addr_26' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_2 : Operation 98 [2/2] (1.35ns)   --->   "%A_load = load i32* %A_addr, align 4" [inver_aug.cpp:37]   --->   Operation 98 'load' 'A_load' <Predicate = (!icmp_ln34)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_2 : Operation 99 [2/2] (1.35ns)   --->   "%A_load_1 = load i32* %A_addr_1, align 4" [inver_aug.cpp:37]   --->   Operation 99 'load' 'A_load_1' <Predicate = (!icmp_ln34)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_2 : Operation 100 [1/1] (0.88ns)   --->   "%icmp_ln41 = icmp eq i4 %i_0, 0" [inver_aug.cpp:41]   --->   Operation 100 'icmp' 'icmp_ln41' <Predicate = (!icmp_ln34)> <Delay = 0.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 101 [1/1] (0.42ns)   --->   "%select_ln41 = select i1 %icmp_ln41, i22 16384, i22 0" [inver_aug.cpp:41]   --->   Operation 101 'select' 'select_ln41' <Predicate = (!icmp_ln34)> <Delay = 0.42> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 102 [1/1] (1.35ns)   --->   "store i22 %select_ln41, i22* %aug_V_addr_15, align 4" [inver_aug.cpp:41]   --->   Operation 102 'store' <Predicate = (!icmp_ln34)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_2 : Operation 103 [1/1] (0.88ns)   --->   "%icmp_ln41_1 = icmp eq i4 %i_0, 1" [inver_aug.cpp:41]   --->   Operation 103 'icmp' 'icmp_ln41_1' <Predicate = (!icmp_ln34)> <Delay = 0.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 104 [1/1] (0.42ns)   --->   "%select_ln41_1 = select i1 %icmp_ln41_1, i22 16384, i22 0" [inver_aug.cpp:41]   --->   Operation 104 'select' 'select_ln41_1' <Predicate = (!icmp_ln34)> <Delay = 0.42> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 105 [1/1] (1.35ns)   --->   "store i22 %select_ln41_1, i22* %aug_V_addr_26, align 4" [inver_aug.cpp:41]   --->   Operation 105 'store' <Predicate = (!icmp_ln34)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_2 : Operation 106 [1/1] (0.88ns)   --->   "%icmp_ln41_2 = icmp eq i4 %i_0, 2" [inver_aug.cpp:41]   --->   Operation 106 'icmp' 'icmp_ln41_2' <Predicate = (!icmp_ln34)> <Delay = 0.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 107 [1/1] (0.88ns)   --->   "%icmp_ln41_3 = icmp eq i4 %i_0, 3" [inver_aug.cpp:41]   --->   Operation 107 'icmp' 'icmp_ln41_3' <Predicate = (!icmp_ln34)> <Delay = 0.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 108 [1/1] (0.88ns)   --->   "%icmp_ln41_4 = icmp eq i4 %i_0, 4" [inver_aug.cpp:41]   --->   Operation 108 'icmp' 'icmp_ln41_4' <Predicate = (!icmp_ln34)> <Delay = 0.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 109 [1/1] (0.88ns)   --->   "%icmp_ln41_5 = icmp eq i4 %i_0, 5" [inver_aug.cpp:41]   --->   Operation 109 'icmp' 'icmp_ln41_5' <Predicate = (!icmp_ln34)> <Delay = 0.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 110 [1/1] (0.88ns)   --->   "%icmp_ln41_6 = icmp eq i4 %i_0, 6" [inver_aug.cpp:41]   --->   Operation 110 'icmp' 'icmp_ln41_6' <Predicate = (!icmp_ln34)> <Delay = 0.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 111 [1/1] (0.88ns)   --->   "%icmp_ln41_7 = icmp eq i4 %i_0, 7" [inver_aug.cpp:41]   --->   Operation 111 'icmp' 'icmp_ln41_7' <Predicate = (!icmp_ln34)> <Delay = 0.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 112 [1/1] (0.88ns)   --->   "%icmp_ln41_8 = icmp eq i4 %i_0, -8" [inver_aug.cpp:41]   --->   Operation 112 'icmp' 'icmp_ln41_8' <Predicate = (!icmp_ln34)> <Delay = 0.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 113 [1/1] (0.88ns)   --->   "%icmp_ln41_9 = icmp eq i4 %i_0, -7" [inver_aug.cpp:41]   --->   Operation 113 'icmp' 'icmp_ln41_9' <Predicate = (!icmp_ln34)> <Delay = 0.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 2.27>
ST_3 : Operation 114 [1/1] (0.90ns)   --->   "%add_ln37_1 = add i8 %add_ln37, 2" [inver_aug.cpp:37]   --->   Operation 114 'add' 'add_ln37_1' <Predicate = true> <Delay = 0.90> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 115 [1/1] (0.00ns)   --->   "%sext_ln37 = sext i8 %add_ln37_1 to i64" [inver_aug.cpp:37]   --->   Operation 115 'sext' 'sext_ln37' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 116 [1/1] (0.00ns)   --->   "%A_addr_2 = getelementptr [100 x i32]* %A, i64 0, i64 %sext_ln37" [inver_aug.cpp:37]   --->   Operation 116 'getelementptr' 'A_addr_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 117 [1/1] (0.90ns)   --->   "%add_ln37_2 = add i8 %add_ln37, 3" [inver_aug.cpp:37]   --->   Operation 117 'add' 'add_ln37_2' <Predicate = true> <Delay = 0.90> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 118 [1/1] (0.00ns)   --->   "%sext_ln37_1 = sext i8 %add_ln37_2 to i64" [inver_aug.cpp:37]   --->   Operation 118 'sext' 'sext_ln37_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 119 [1/1] (0.00ns)   --->   "%A_addr_3 = getelementptr [100 x i32]* %A, i64 0, i64 %sext_ln37_1" [inver_aug.cpp:37]   --->   Operation 119 'getelementptr' 'A_addr_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 120 [1/1] (0.92ns)   --->   "%add_ln203_9 = add i9 %add_ln203, 12" [inver_aug.cpp:41]   --->   Operation 120 'add' 'add_ln203_9' <Predicate = true> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 121 [1/1] (0.00ns)   --->   "%sext_ln203_8 = sext i9 %add_ln203_9 to i64" [inver_aug.cpp:41]   --->   Operation 121 'sext' 'sext_ln203_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 122 [1/1] (0.00ns)   --->   "%aug_V_addr_27 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %sext_ln203_8" [inver_aug.cpp:41]   --->   Operation 122 'getelementptr' 'aug_V_addr_27' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 123 [1/1] (0.92ns)   --->   "%add_ln203_10 = add i9 %add_ln203, 13" [inver_aug.cpp:41]   --->   Operation 123 'add' 'add_ln203_10' <Predicate = true> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 124 [1/1] (0.00ns)   --->   "%sext_ln203_9 = sext i9 %add_ln203_10 to i64" [inver_aug.cpp:41]   --->   Operation 124 'sext' 'sext_ln203_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 125 [1/1] (0.00ns)   --->   "%aug_V_addr_28 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %sext_ln203_9" [inver_aug.cpp:41]   --->   Operation 125 'getelementptr' 'aug_V_addr_28' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 126 [1/2] (1.35ns)   --->   "%A_load = load i32* %A_addr, align 4" [inver_aug.cpp:37]   --->   Operation 126 'load' 'A_load' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_3 : Operation 127 [1/1] (0.00ns)   --->   "%trunc_ln731 = trunc i32 %A_load to i8" [inver_aug.cpp:37]   --->   Operation 127 'trunc' 'trunc_ln731' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 128 [1/2] (1.35ns)   --->   "%A_load_1 = load i32* %A_addr_1, align 4" [inver_aug.cpp:37]   --->   Operation 128 'load' 'A_load_1' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_3 : Operation 129 [1/1] (0.00ns)   --->   "%trunc_ln731_1 = trunc i32 %A_load_1 to i8" [inver_aug.cpp:37]   --->   Operation 129 'trunc' 'trunc_ln731_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 130 [2/2] (1.35ns)   --->   "%A_load_2 = load i32* %A_addr_2, align 4" [inver_aug.cpp:37]   --->   Operation 130 'load' 'A_load_2' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_3 : Operation 131 [2/2] (1.35ns)   --->   "%A_load_3 = load i32* %A_addr_3, align 4" [inver_aug.cpp:37]   --->   Operation 131 'load' 'A_load_3' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_3 : Operation 132 [1/1] (0.42ns)   --->   "%select_ln41_2 = select i1 %icmp_ln41_2, i22 16384, i22 0" [inver_aug.cpp:41]   --->   Operation 132 'select' 'select_ln41_2' <Predicate = true> <Delay = 0.42> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 133 [1/1] (1.35ns)   --->   "store i22 %select_ln41_2, i22* %aug_V_addr_27, align 4" [inver_aug.cpp:41]   --->   Operation 133 'store' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_3 : Operation 134 [1/1] (0.42ns)   --->   "%select_ln41_3 = select i1 %icmp_ln41_3, i22 16384, i22 0" [inver_aug.cpp:41]   --->   Operation 134 'select' 'select_ln41_3' <Predicate = true> <Delay = 0.42> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 135 [1/1] (1.35ns)   --->   "store i22 %select_ln41_3, i22* %aug_V_addr_28, align 4" [inver_aug.cpp:41]   --->   Operation 135 'store' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>

State 4 <SV = 3> <Delay = 2.27>
ST_4 : Operation 136 [1/1] (0.90ns)   --->   "%add_ln37_3 = add i8 %add_ln37, 4" [inver_aug.cpp:37]   --->   Operation 136 'add' 'add_ln37_3' <Predicate = true> <Delay = 0.90> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 137 [1/1] (0.00ns)   --->   "%sext_ln37_2 = sext i8 %add_ln37_3 to i64" [inver_aug.cpp:37]   --->   Operation 137 'sext' 'sext_ln37_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 138 [1/1] (0.00ns)   --->   "%A_addr_4 = getelementptr [100 x i32]* %A, i64 0, i64 %sext_ln37_2" [inver_aug.cpp:37]   --->   Operation 138 'getelementptr' 'A_addr_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 139 [1/1] (0.90ns)   --->   "%add_ln37_4 = add i8 %add_ln37, 5" [inver_aug.cpp:37]   --->   Operation 139 'add' 'add_ln37_4' <Predicate = true> <Delay = 0.90> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 140 [1/1] (0.00ns)   --->   "%sext_ln37_3 = sext i8 %add_ln37_4 to i64" [inver_aug.cpp:37]   --->   Operation 140 'sext' 'sext_ln37_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 141 [1/1] (0.00ns)   --->   "%A_addr_5 = getelementptr [100 x i32]* %A, i64 0, i64 %sext_ln37_3" [inver_aug.cpp:37]   --->   Operation 141 'getelementptr' 'A_addr_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 142 [1/1] (0.92ns)   --->   "%add_ln203_11 = add i9 %add_ln203, 14" [inver_aug.cpp:41]   --->   Operation 142 'add' 'add_ln203_11' <Predicate = true> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 143 [1/1] (0.00ns)   --->   "%sext_ln203_10 = sext i9 %add_ln203_11 to i64" [inver_aug.cpp:41]   --->   Operation 143 'sext' 'sext_ln203_10' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 144 [1/1] (0.00ns)   --->   "%aug_V_addr_29 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %sext_ln203_10" [inver_aug.cpp:41]   --->   Operation 144 'getelementptr' 'aug_V_addr_29' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 145 [1/1] (0.92ns)   --->   "%add_ln203_12 = add i9 %add_ln203, 15" [inver_aug.cpp:41]   --->   Operation 145 'add' 'add_ln203_12' <Predicate = true> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 146 [1/1] (0.00ns)   --->   "%sext_ln203_11 = sext i9 %add_ln203_12 to i64" [inver_aug.cpp:41]   --->   Operation 146 'sext' 'sext_ln203_11' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 147 [1/1] (0.00ns)   --->   "%aug_V_addr_30 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %sext_ln203_11" [inver_aug.cpp:41]   --->   Operation 147 'getelementptr' 'aug_V_addr_30' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 148 [1/2] (1.35ns)   --->   "%A_load_2 = load i32* %A_addr_2, align 4" [inver_aug.cpp:37]   --->   Operation 148 'load' 'A_load_2' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_4 : Operation 149 [1/1] (0.00ns)   --->   "%trunc_ln731_2 = trunc i32 %A_load_2 to i8" [inver_aug.cpp:37]   --->   Operation 149 'trunc' 'trunc_ln731_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 150 [1/2] (1.35ns)   --->   "%A_load_3 = load i32* %A_addr_3, align 4" [inver_aug.cpp:37]   --->   Operation 150 'load' 'A_load_3' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_4 : Operation 151 [1/1] (0.00ns)   --->   "%trunc_ln731_3 = trunc i32 %A_load_3 to i8" [inver_aug.cpp:37]   --->   Operation 151 'trunc' 'trunc_ln731_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 152 [2/2] (1.35ns)   --->   "%A_load_4 = load i32* %A_addr_4, align 4" [inver_aug.cpp:37]   --->   Operation 152 'load' 'A_load_4' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_4 : Operation 153 [2/2] (1.35ns)   --->   "%A_load_5 = load i32* %A_addr_5, align 4" [inver_aug.cpp:37]   --->   Operation 153 'load' 'A_load_5' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_4 : Operation 154 [1/1] (0.42ns)   --->   "%select_ln41_4 = select i1 %icmp_ln41_4, i22 16384, i22 0" [inver_aug.cpp:41]   --->   Operation 154 'select' 'select_ln41_4' <Predicate = true> <Delay = 0.42> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 155 [1/1] (1.35ns)   --->   "store i22 %select_ln41_4, i22* %aug_V_addr_29, align 4" [inver_aug.cpp:41]   --->   Operation 155 'store' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_4 : Operation 156 [1/1] (0.42ns)   --->   "%select_ln41_5 = select i1 %icmp_ln41_5, i22 16384, i22 0" [inver_aug.cpp:41]   --->   Operation 156 'select' 'select_ln41_5' <Predicate = true> <Delay = 0.42> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 157 [1/1] (1.35ns)   --->   "store i22 %select_ln41_5, i22* %aug_V_addr_30, align 4" [inver_aug.cpp:41]   --->   Operation 157 'store' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>

State 5 <SV = 4> <Delay = 2.27>
ST_5 : Operation 158 [1/1] (0.90ns)   --->   "%add_ln37_5 = add i8 %add_ln37, 6" [inver_aug.cpp:37]   --->   Operation 158 'add' 'add_ln37_5' <Predicate = true> <Delay = 0.90> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 159 [1/1] (0.00ns)   --->   "%sext_ln37_4 = sext i8 %add_ln37_5 to i64" [inver_aug.cpp:37]   --->   Operation 159 'sext' 'sext_ln37_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 160 [1/1] (0.00ns)   --->   "%A_addr_6 = getelementptr [100 x i32]* %A, i64 0, i64 %sext_ln37_4" [inver_aug.cpp:37]   --->   Operation 160 'getelementptr' 'A_addr_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 161 [1/1] (0.90ns)   --->   "%add_ln37_6 = add i8 %add_ln37, 7" [inver_aug.cpp:37]   --->   Operation 161 'add' 'add_ln37_6' <Predicate = true> <Delay = 0.90> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 162 [1/1] (0.00ns)   --->   "%sext_ln37_5 = sext i8 %add_ln37_6 to i64" [inver_aug.cpp:37]   --->   Operation 162 'sext' 'sext_ln37_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 163 [1/1] (0.00ns)   --->   "%A_addr_7 = getelementptr [100 x i32]* %A, i64 0, i64 %sext_ln37_5" [inver_aug.cpp:37]   --->   Operation 163 'getelementptr' 'A_addr_7' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 164 [1/1] (0.92ns)   --->   "%add_ln203_13 = add i9 %add_ln203, 16" [inver_aug.cpp:41]   --->   Operation 164 'add' 'add_ln203_13' <Predicate = true> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 165 [1/1] (0.00ns)   --->   "%sext_ln203_12 = sext i9 %add_ln203_13 to i64" [inver_aug.cpp:41]   --->   Operation 165 'sext' 'sext_ln203_12' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 166 [1/1] (0.00ns)   --->   "%aug_V_addr_31 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %sext_ln203_12" [inver_aug.cpp:41]   --->   Operation 166 'getelementptr' 'aug_V_addr_31' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 167 [1/1] (0.92ns)   --->   "%add_ln203_14 = add i9 %add_ln203, 17" [inver_aug.cpp:41]   --->   Operation 167 'add' 'add_ln203_14' <Predicate = true> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 168 [1/1] (0.00ns)   --->   "%sext_ln203_13 = sext i9 %add_ln203_14 to i64" [inver_aug.cpp:41]   --->   Operation 168 'sext' 'sext_ln203_13' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 169 [1/1] (0.00ns)   --->   "%aug_V_addr_32 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %sext_ln203_13" [inver_aug.cpp:41]   --->   Operation 169 'getelementptr' 'aug_V_addr_32' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 170 [1/2] (1.35ns)   --->   "%A_load_4 = load i32* %A_addr_4, align 4" [inver_aug.cpp:37]   --->   Operation 170 'load' 'A_load_4' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_5 : Operation 171 [1/1] (0.00ns)   --->   "%trunc_ln731_4 = trunc i32 %A_load_4 to i8" [inver_aug.cpp:37]   --->   Operation 171 'trunc' 'trunc_ln731_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 172 [1/2] (1.35ns)   --->   "%A_load_5 = load i32* %A_addr_5, align 4" [inver_aug.cpp:37]   --->   Operation 172 'load' 'A_load_5' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_5 : Operation 173 [1/1] (0.00ns)   --->   "%trunc_ln731_5 = trunc i32 %A_load_5 to i8" [inver_aug.cpp:37]   --->   Operation 173 'trunc' 'trunc_ln731_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 174 [2/2] (1.35ns)   --->   "%A_load_6 = load i32* %A_addr_6, align 4" [inver_aug.cpp:37]   --->   Operation 174 'load' 'A_load_6' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_5 : Operation 175 [2/2] (1.35ns)   --->   "%A_load_7 = load i32* %A_addr_7, align 4" [inver_aug.cpp:37]   --->   Operation 175 'load' 'A_load_7' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_5 : Operation 176 [1/1] (0.42ns)   --->   "%select_ln41_6 = select i1 %icmp_ln41_6, i22 16384, i22 0" [inver_aug.cpp:41]   --->   Operation 176 'select' 'select_ln41_6' <Predicate = true> <Delay = 0.42> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 177 [1/1] (1.35ns)   --->   "store i22 %select_ln41_6, i22* %aug_V_addr_31, align 4" [inver_aug.cpp:41]   --->   Operation 177 'store' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_5 : Operation 178 [1/1] (0.42ns)   --->   "%select_ln41_7 = select i1 %icmp_ln41_7, i22 16384, i22 0" [inver_aug.cpp:41]   --->   Operation 178 'select' 'select_ln41_7' <Predicate = true> <Delay = 0.42> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 179 [1/1] (1.35ns)   --->   "store i22 %select_ln41_7, i22* %aug_V_addr_32, align 4" [inver_aug.cpp:41]   --->   Operation 179 'store' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>

State 6 <SV = 5> <Delay = 2.27>
ST_6 : Operation 180 [1/1] (0.90ns)   --->   "%add_ln37_7 = add i8 %add_ln37, 8" [inver_aug.cpp:37]   --->   Operation 180 'add' 'add_ln37_7' <Predicate = true> <Delay = 0.90> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 181 [1/1] (0.00ns)   --->   "%sext_ln37_6 = sext i8 %add_ln37_7 to i64" [inver_aug.cpp:37]   --->   Operation 181 'sext' 'sext_ln37_6' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 182 [1/1] (0.00ns)   --->   "%A_addr_8 = getelementptr [100 x i32]* %A, i64 0, i64 %sext_ln37_6" [inver_aug.cpp:37]   --->   Operation 182 'getelementptr' 'A_addr_8' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 183 [1/1] (0.90ns)   --->   "%add_ln37_8 = add i8 %add_ln37, 9" [inver_aug.cpp:37]   --->   Operation 183 'add' 'add_ln37_8' <Predicate = true> <Delay = 0.90> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 184 [1/1] (0.00ns)   --->   "%sext_ln37_7 = sext i8 %add_ln37_8 to i64" [inver_aug.cpp:37]   --->   Operation 184 'sext' 'sext_ln37_7' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 185 [1/1] (0.00ns)   --->   "%A_addr_9 = getelementptr [100 x i32]* %A, i64 0, i64 %sext_ln37_7" [inver_aug.cpp:37]   --->   Operation 185 'getelementptr' 'A_addr_9' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 186 [1/1] (0.92ns)   --->   "%add_ln203_15 = add i9 %add_ln203, 18" [inver_aug.cpp:41]   --->   Operation 186 'add' 'add_ln203_15' <Predicate = true> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 187 [1/1] (0.00ns)   --->   "%sext_ln203_14 = sext i9 %add_ln203_15 to i64" [inver_aug.cpp:41]   --->   Operation 187 'sext' 'sext_ln203_14' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 188 [1/1] (0.00ns)   --->   "%aug_V_addr_33 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %sext_ln203_14" [inver_aug.cpp:41]   --->   Operation 188 'getelementptr' 'aug_V_addr_33' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 189 [1/1] (0.92ns)   --->   "%add_ln203_16 = add i9 %add_ln203, 19" [inver_aug.cpp:41]   --->   Operation 189 'add' 'add_ln203_16' <Predicate = true> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 190 [1/1] (0.00ns)   --->   "%sext_ln203_15 = sext i9 %add_ln203_16 to i64" [inver_aug.cpp:41]   --->   Operation 190 'sext' 'sext_ln203_15' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 191 [1/1] (0.00ns)   --->   "%aug_V_addr_34 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %sext_ln203_15" [inver_aug.cpp:41]   --->   Operation 191 'getelementptr' 'aug_V_addr_34' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 192 [1/2] (1.35ns)   --->   "%A_load_6 = load i32* %A_addr_6, align 4" [inver_aug.cpp:37]   --->   Operation 192 'load' 'A_load_6' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_6 : Operation 193 [1/1] (0.00ns)   --->   "%trunc_ln731_6 = trunc i32 %A_load_6 to i8" [inver_aug.cpp:37]   --->   Operation 193 'trunc' 'trunc_ln731_6' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 194 [1/2] (1.35ns)   --->   "%A_load_7 = load i32* %A_addr_7, align 4" [inver_aug.cpp:37]   --->   Operation 194 'load' 'A_load_7' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_6 : Operation 195 [1/1] (0.00ns)   --->   "%trunc_ln731_7 = trunc i32 %A_load_7 to i8" [inver_aug.cpp:37]   --->   Operation 195 'trunc' 'trunc_ln731_7' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 196 [2/2] (1.35ns)   --->   "%A_load_8 = load i32* %A_addr_8, align 4" [inver_aug.cpp:37]   --->   Operation 196 'load' 'A_load_8' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_6 : Operation 197 [2/2] (1.35ns)   --->   "%A_load_9 = load i32* %A_addr_9, align 4" [inver_aug.cpp:37]   --->   Operation 197 'load' 'A_load_9' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_6 : Operation 198 [1/1] (0.42ns)   --->   "%select_ln41_8 = select i1 %icmp_ln41_8, i22 16384, i22 0" [inver_aug.cpp:41]   --->   Operation 198 'select' 'select_ln41_8' <Predicate = true> <Delay = 0.42> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 199 [1/1] (1.35ns)   --->   "store i22 %select_ln41_8, i22* %aug_V_addr_33, align 4" [inver_aug.cpp:41]   --->   Operation 199 'store' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_6 : Operation 200 [1/1] (0.42ns)   --->   "%select_ln41_9 = select i1 %icmp_ln41_9, i22 16384, i22 0" [inver_aug.cpp:41]   --->   Operation 200 'select' 'select_ln41_9' <Predicate = true> <Delay = 0.42> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 201 [1/1] (1.35ns)   --->   "store i22 %select_ln41_9, i22* %aug_V_addr_34, align 4" [inver_aug.cpp:41]   --->   Operation 201 'store' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>

State 7 <SV = 6> <Delay = 1.35>
ST_7 : Operation 202 [1/1] (0.00ns)   --->   "%zext_ln203_2 = zext i9 %add_ln203 to i64" [inver_aug.cpp:37]   --->   Operation 202 'zext' 'zext_ln203_2' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 203 [1/1] (0.00ns)   --->   "%aug_V_addr_1 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %zext_ln203_2" [inver_aug.cpp:37]   --->   Operation 203 'getelementptr' 'aug_V_addr_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 204 [1/1] (0.00ns)   --->   "%or_ln203 = or i9 %add_ln203, 1" [inver_aug.cpp:37]   --->   Operation 204 'or' 'or_ln203' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 205 [1/1] (0.00ns)   --->   "%zext_ln203_3 = zext i9 %or_ln203 to i64" [inver_aug.cpp:37]   --->   Operation 205 'zext' 'zext_ln203_3' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 206 [1/1] (0.00ns)   --->   "%aug_V_addr_3 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %zext_ln203_3" [inver_aug.cpp:37]   --->   Operation 206 'getelementptr' 'aug_V_addr_3' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 207 [1/1] (0.00ns)   --->   "%shl_ln = call i22 @_ssdm_op_BitConcatenate.i22.i8.i14(i8 %trunc_ln731, i14 0)" [inver_aug.cpp:37]   --->   Operation 207 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 208 [1/1] (1.35ns)   --->   "store i22 %shl_ln, i22* %aug_V_addr_1, align 4" [inver_aug.cpp:37]   --->   Operation 208 'store' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_7 : Operation 209 [1/1] (0.00ns)   --->   "%shl_ln731_1 = call i22 @_ssdm_op_BitConcatenate.i22.i8.i14(i8 %trunc_ln731_1, i14 0)" [inver_aug.cpp:37]   --->   Operation 209 'bitconcatenate' 'shl_ln731_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 210 [1/1] (1.35ns)   --->   "store i22 %shl_ln731_1, i22* %aug_V_addr_3, align 4" [inver_aug.cpp:37]   --->   Operation 210 'store' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_7 : Operation 211 [1/2] (1.35ns)   --->   "%A_load_8 = load i32* %A_addr_8, align 4" [inver_aug.cpp:37]   --->   Operation 211 'load' 'A_load_8' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_7 : Operation 212 [1/1] (0.00ns)   --->   "%trunc_ln731_8 = trunc i32 %A_load_8 to i8" [inver_aug.cpp:37]   --->   Operation 212 'trunc' 'trunc_ln731_8' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 213 [1/2] (1.35ns)   --->   "%A_load_9 = load i32* %A_addr_9, align 4" [inver_aug.cpp:37]   --->   Operation 213 'load' 'A_load_9' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_7 : Operation 214 [1/1] (0.00ns)   --->   "%trunc_ln731_9 = trunc i32 %A_load_9 to i8" [inver_aug.cpp:37]   --->   Operation 214 'trunc' 'trunc_ln731_9' <Predicate = true> <Delay = 0.00>

State 8 <SV = 7> <Delay = 1.35>
ST_8 : Operation 215 [1/1] (0.00ns)   --->   "%or_ln203_1 = or i9 %add_ln203, 2" [inver_aug.cpp:37]   --->   Operation 215 'or' 'or_ln203_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 216 [1/1] (0.00ns)   --->   "%zext_ln203_4 = zext i9 %or_ln203_1 to i64" [inver_aug.cpp:37]   --->   Operation 216 'zext' 'zext_ln203_4' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 217 [1/1] (0.00ns)   --->   "%aug_V_addr_5 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %zext_ln203_4" [inver_aug.cpp:37]   --->   Operation 217 'getelementptr' 'aug_V_addr_5' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 218 [1/1] (0.00ns)   --->   "%or_ln203_2 = or i9 %add_ln203, 3" [inver_aug.cpp:37]   --->   Operation 218 'or' 'or_ln203_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 219 [1/1] (0.00ns)   --->   "%zext_ln203_5 = zext i9 %or_ln203_2 to i64" [inver_aug.cpp:37]   --->   Operation 219 'zext' 'zext_ln203_5' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 220 [1/1] (0.00ns)   --->   "%aug_V_addr_8 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %zext_ln203_5" [inver_aug.cpp:37]   --->   Operation 220 'getelementptr' 'aug_V_addr_8' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 221 [1/1] (0.00ns)   --->   "%shl_ln731_2 = call i22 @_ssdm_op_BitConcatenate.i22.i8.i14(i8 %trunc_ln731_2, i14 0)" [inver_aug.cpp:37]   --->   Operation 221 'bitconcatenate' 'shl_ln731_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 222 [1/1] (1.35ns)   --->   "store i22 %shl_ln731_2, i22* %aug_V_addr_5, align 4" [inver_aug.cpp:37]   --->   Operation 222 'store' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_8 : Operation 223 [1/1] (0.00ns)   --->   "%shl_ln731_3 = call i22 @_ssdm_op_BitConcatenate.i22.i8.i14(i8 %trunc_ln731_3, i14 0)" [inver_aug.cpp:37]   --->   Operation 223 'bitconcatenate' 'shl_ln731_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 224 [1/1] (1.35ns)   --->   "store i22 %shl_ln731_3, i22* %aug_V_addr_8, align 4" [inver_aug.cpp:37]   --->   Operation 224 'store' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>

State 9 <SV = 8> <Delay = 2.27>
ST_9 : Operation 225 [1/1] (0.92ns)   --->   "%add_ln203_1 = add i9 %add_ln203, 4" [inver_aug.cpp:37]   --->   Operation 225 'add' 'add_ln203_1' <Predicate = true> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 226 [1/1] (0.00ns)   --->   "%sext_ln203 = sext i9 %add_ln203_1 to i64" [inver_aug.cpp:37]   --->   Operation 226 'sext' 'sext_ln203' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 227 [1/1] (0.00ns)   --->   "%aug_V_addr_9 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %sext_ln203" [inver_aug.cpp:37]   --->   Operation 227 'getelementptr' 'aug_V_addr_9' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 228 [1/1] (0.92ns)   --->   "%add_ln203_2 = add i9 %add_ln203, 5" [inver_aug.cpp:37]   --->   Operation 228 'add' 'add_ln203_2' <Predicate = true> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 229 [1/1] (0.00ns)   --->   "%sext_ln203_1 = sext i9 %add_ln203_2 to i64" [inver_aug.cpp:37]   --->   Operation 229 'sext' 'sext_ln203_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 230 [1/1] (0.00ns)   --->   "%aug_V_addr_10 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %sext_ln203_1" [inver_aug.cpp:37]   --->   Operation 230 'getelementptr' 'aug_V_addr_10' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 231 [1/1] (0.00ns)   --->   "%shl_ln731_4 = call i22 @_ssdm_op_BitConcatenate.i22.i8.i14(i8 %trunc_ln731_4, i14 0)" [inver_aug.cpp:37]   --->   Operation 231 'bitconcatenate' 'shl_ln731_4' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 232 [1/1] (1.35ns)   --->   "store i22 %shl_ln731_4, i22* %aug_V_addr_9, align 4" [inver_aug.cpp:37]   --->   Operation 232 'store' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_9 : Operation 233 [1/1] (0.00ns)   --->   "%shl_ln731_5 = call i22 @_ssdm_op_BitConcatenate.i22.i8.i14(i8 %trunc_ln731_5, i14 0)" [inver_aug.cpp:37]   --->   Operation 233 'bitconcatenate' 'shl_ln731_5' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 234 [1/1] (1.35ns)   --->   "store i22 %shl_ln731_5, i22* %aug_V_addr_10, align 4" [inver_aug.cpp:37]   --->   Operation 234 'store' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>

State 10 <SV = 9> <Delay = 2.27>
ST_10 : Operation 235 [1/1] (0.92ns)   --->   "%add_ln203_3 = add i9 %add_ln203, 6" [inver_aug.cpp:37]   --->   Operation 235 'add' 'add_ln203_3' <Predicate = true> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 236 [1/1] (0.00ns)   --->   "%sext_ln203_2 = sext i9 %add_ln203_3 to i64" [inver_aug.cpp:37]   --->   Operation 236 'sext' 'sext_ln203_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 237 [1/1] (0.00ns)   --->   "%aug_V_addr_11 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %sext_ln203_2" [inver_aug.cpp:37]   --->   Operation 237 'getelementptr' 'aug_V_addr_11' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 238 [1/1] (0.92ns)   --->   "%add_ln203_4 = add i9 %add_ln203, 7" [inver_aug.cpp:37]   --->   Operation 238 'add' 'add_ln203_4' <Predicate = true> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 239 [1/1] (0.00ns)   --->   "%sext_ln203_3 = sext i9 %add_ln203_4 to i64" [inver_aug.cpp:37]   --->   Operation 239 'sext' 'sext_ln203_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 240 [1/1] (0.00ns)   --->   "%aug_V_addr_12 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %sext_ln203_3" [inver_aug.cpp:37]   --->   Operation 240 'getelementptr' 'aug_V_addr_12' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 241 [1/1] (0.00ns)   --->   "%shl_ln731_6 = call i22 @_ssdm_op_BitConcatenate.i22.i8.i14(i8 %trunc_ln731_6, i14 0)" [inver_aug.cpp:37]   --->   Operation 241 'bitconcatenate' 'shl_ln731_6' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 242 [1/1] (1.35ns)   --->   "store i22 %shl_ln731_6, i22* %aug_V_addr_11, align 4" [inver_aug.cpp:37]   --->   Operation 242 'store' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_10 : Operation 243 [1/1] (0.00ns)   --->   "%shl_ln731_7 = call i22 @_ssdm_op_BitConcatenate.i22.i8.i14(i8 %trunc_ln731_7, i14 0)" [inver_aug.cpp:37]   --->   Operation 243 'bitconcatenate' 'shl_ln731_7' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 244 [1/1] (1.35ns)   --->   "store i22 %shl_ln731_7, i22* %aug_V_addr_12, align 4" [inver_aug.cpp:37]   --->   Operation 244 'store' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>

State 11 <SV = 10> <Delay = 2.27>
ST_11 : Operation 245 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([13 x i8]* @p_str) nounwind" [inver_aug.cpp:34]   --->   Operation 245 'specloopname' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 246 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str)" [inver_aug.cpp:34]   --->   Operation 246 'specregionbegin' 'tmp' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 247 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [inver_aug.cpp:35]   --->   Operation 247 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 248 [1/1] (0.92ns)   --->   "%add_ln203_5 = add i9 %add_ln203, 8" [inver_aug.cpp:37]   --->   Operation 248 'add' 'add_ln203_5' <Predicate = true> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 249 [1/1] (0.00ns)   --->   "%sext_ln203_4 = sext i9 %add_ln203_5 to i64" [inver_aug.cpp:37]   --->   Operation 249 'sext' 'sext_ln203_4' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 250 [1/1] (0.00ns)   --->   "%aug_V_addr_13 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %sext_ln203_4" [inver_aug.cpp:37]   --->   Operation 250 'getelementptr' 'aug_V_addr_13' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 251 [1/1] (0.92ns)   --->   "%add_ln203_6 = add i9 %add_ln203, 9" [inver_aug.cpp:37]   --->   Operation 251 'add' 'add_ln203_6' <Predicate = true> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 252 [1/1] (0.00ns)   --->   "%sext_ln203_5 = sext i9 %add_ln203_6 to i64" [inver_aug.cpp:37]   --->   Operation 252 'sext' 'sext_ln203_5' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 253 [1/1] (0.00ns)   --->   "%aug_V_addr_14 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %sext_ln203_5" [inver_aug.cpp:37]   --->   Operation 253 'getelementptr' 'aug_V_addr_14' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 254 [1/1] (0.00ns)   --->   "%shl_ln731_8 = call i22 @_ssdm_op_BitConcatenate.i22.i8.i14(i8 %trunc_ln731_8, i14 0)" [inver_aug.cpp:37]   --->   Operation 254 'bitconcatenate' 'shl_ln731_8' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 255 [1/1] (1.35ns)   --->   "store i22 %shl_ln731_8, i22* %aug_V_addr_13, align 4" [inver_aug.cpp:37]   --->   Operation 255 'store' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_11 : Operation 256 [1/1] (0.00ns)   --->   "%shl_ln731_9 = call i22 @_ssdm_op_BitConcatenate.i22.i8.i14(i8 %trunc_ln731_9, i14 0)" [inver_aug.cpp:37]   --->   Operation 256 'bitconcatenate' 'shl_ln731_9' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 257 [1/1] (1.35ns)   --->   "store i22 %shl_ln731_9, i22* %aug_V_addr_14, align 4" [inver_aug.cpp:37]   --->   Operation 257 'store' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_11 : Operation 258 [1/1] (0.00ns)   --->   "%empty_7 = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str, i32 %tmp)" [inver_aug.cpp:43]   --->   Operation 258 'specregionend' 'empty_7' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 259 [1/1] (0.00ns)   --->   "br label %.preheader184" [inver_aug.cpp:34]   --->   Operation 259 'br' <Predicate = true> <Delay = 0.00>

State 12 <SV = 2> <Delay = 0.75>
ST_12 : Operation 260 [1/1] (0.75ns)   --->   "br label %.preheader182" [inver_aug.cpp:47]   --->   Operation 260 'br' <Predicate = true> <Delay = 0.75>

State 13 <SV = 3> <Delay = 3.17>
ST_13 : Operation 261 [1/1] (0.00ns)   --->   "%i_1 = phi i4 [ %i_4, %Row_Operation_end ], [ 0, %.preheader182.preheader ]"   --->   Operation 261 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 262 [1/1] (0.88ns)   --->   "%icmp_ln47 = icmp eq i4 %i_1, -6" [inver_aug.cpp:47]   --->   Operation 262 'icmp' 'icmp_ln47' <Predicate = true> <Delay = 0.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 263 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)"   --->   Operation 263 'speclooptripcount' 'empty_8' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 264 [1/1] (0.86ns)   --->   "%i_4 = add i4 %i_1, 1" [inver_aug.cpp:47]   --->   Operation 264 'add' 'i_4' <Predicate = true> <Delay = 0.86> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 265 [1/1] (0.00ns)   --->   "br i1 %icmp_ln47, label %.preheader.preheader, label %Row_Operation_begin" [inver_aug.cpp:47]   --->   Operation 265 'br' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 266 [1/1] (0.00ns)   --->   "%zext_ln203_6 = zext i4 %i_1 to i9" [inver_aug.cpp:51]   --->   Operation 266 'zext' 'zext_ln203_6' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_13 : Operation 267 [1/1] (0.00ns)   --->   "%tmp_6 = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %i_1, i4 0)" [inver_aug.cpp:51]   --->   Operation 267 'bitconcatenate' 'tmp_6' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_13 : Operation 268 [1/1] (0.00ns)   --->   "%zext_ln203_7 = zext i8 %tmp_6 to i9" [inver_aug.cpp:51]   --->   Operation 268 'zext' 'zext_ln203_7' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_13 : Operation 269 [1/1] (0.00ns)   --->   "%tmp_7 = call i6 @_ssdm_op_BitConcatenate.i6.i4.i2(i4 %i_1, i2 0)" [inver_aug.cpp:51]   --->   Operation 269 'bitconcatenate' 'tmp_7' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_13 : Operation 270 [1/1] (0.00ns)   --->   "%zext_ln203_8 = zext i6 %tmp_7 to i9" [inver_aug.cpp:51]   --->   Operation 270 'zext' 'zext_ln203_8' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_13 : Operation 271 [1/1] (0.90ns)   --->   "%add_ln203_17 = add i9 %zext_ln203_8, %zext_ln203_7" [inver_aug.cpp:51]   --->   Operation 271 'add' 'add_ln203_17' <Predicate = (!icmp_ln47)> <Delay = 0.90> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 272 [1/1] (0.92ns)   --->   "%add_ln203_18 = add i9 %add_ln203_17, %zext_ln203_6" [inver_aug.cpp:51]   --->   Operation 272 'add' 'add_ln203_18' <Predicate = (!icmp_ln47)> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 273 [1/1] (0.00ns)   --->   "%zext_ln203_9 = zext i9 %add_ln203_18 to i64" [inver_aug.cpp:51]   --->   Operation 273 'zext' 'zext_ln203_9' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_13 : Operation 274 [1/1] (0.00ns)   --->   "%aug_V_addr = getelementptr [200 x i22]* %aug_V, i64 0, i64 %zext_ln203_9" [inver_aug.cpp:51]   --->   Operation 274 'getelementptr' 'aug_V_addr' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_13 : Operation 275 [2/2] (1.35ns)   --->   "%temp_V = load i22* %aug_V_addr, align 4" [inver_aug.cpp:51]   --->   Operation 275 'load' 'temp_V' <Predicate = (!icmp_ln47)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_13 : Operation 276 [1/1] (0.75ns)   --->   "br label %.preheader" [inver_aug.cpp:69]   --->   Operation 276 'br' <Predicate = (icmp_ln47)> <Delay = 0.75>

State 14 <SV = 4> <Delay = 1.35>
ST_14 : Operation 277 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str4) nounwind" [inver_aug.cpp:47]   --->   Operation 277 'specloopname' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 278 [1/1] (0.00ns)   --->   "%tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str4)" [inver_aug.cpp:47]   --->   Operation 278 'specregionbegin' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 279 [1/2] (1.35ns)   --->   "%temp_V = load i22* %aug_V_addr, align 4" [inver_aug.cpp:51]   --->   Operation 279 'load' 'temp_V' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_14 : Operation 280 [1/1] (0.00ns)   --->   "%sext_ln1148 = sext i22 %temp_V to i36" [inver_aug.cpp:53]   --->   Operation 280 'sext' 'sext_ln1148' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 281 [1/1] (0.75ns)   --->   "br label %0" [inver_aug.cpp:52]   --->   Operation 281 'br' <Predicate = true> <Delay = 0.75>

State 15 <SV = 5> <Delay = 2.27>
ST_15 : Operation 282 [1/1] (0.00ns)   --->   "%j_2 = phi i5 [ 0, %Row_Operation_begin ], [ %j, %_ZNK13ap_fixed_baseILi22ELi8ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEdvILi22ELi8ELb1ELS0_5ELS1_3ELi0EEENS2_5RTypeIXT_EXT0_EXT1_EE3divERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit.i ]"   --->   Operation 282 'phi' 'j_2' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 283 [1/1] (0.87ns)   --->   "%icmp_ln52 = icmp eq i5 %j_2, -12" [inver_aug.cpp:52]   --->   Operation 283 'icmp' 'icmp_ln52' <Predicate = true> <Delay = 0.87> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 284 [1/1] (0.00ns)   --->   "%empty_9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 20, i64 20, i64 20)"   --->   Operation 284 'speclooptripcount' 'empty_9' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 285 [1/1] (0.87ns)   --->   "%j = add i5 %j_2, 1" [inver_aug.cpp:52]   --->   Operation 285 'add' 'j' <Predicate = true> <Delay = 0.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 286 [1/1] (0.00ns)   --->   "br i1 %icmp_ln52, label %.preheader181.preheader, label %_ZNK13ap_fixed_baseILi22ELi8ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEdvILi22ELi8ELb1ELS0_5ELS1_3ELi0EEENS2_5RTypeIXT_EXT0_EXT1_EE3divERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit.i" [inver_aug.cpp:52]   --->   Operation 286 'br' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 287 [1/1] (0.00ns)   --->   "%zext_ln1265 = zext i5 %j_2 to i9" [inver_aug.cpp:53]   --->   Operation 287 'zext' 'zext_ln1265' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_15 : Operation 288 [1/1] (0.92ns)   --->   "%add_ln1265 = add i9 %add_ln203_17, %zext_ln1265" [inver_aug.cpp:53]   --->   Operation 288 'add' 'add_ln1265' <Predicate = (!icmp_ln52)> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 289 [1/1] (0.00ns)   --->   "%zext_ln1265_1 = zext i9 %add_ln1265 to i64" [inver_aug.cpp:53]   --->   Operation 289 'zext' 'zext_ln1265_1' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_15 : Operation 290 [1/1] (0.00ns)   --->   "%aug_V_addr_2 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %zext_ln1265_1" [inver_aug.cpp:53]   --->   Operation 290 'getelementptr' 'aug_V_addr_2' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_15 : Operation 291 [2/2] (1.35ns)   --->   "%p_Val2_s = load i22* %aug_V_addr_2, align 4" [inver_aug.cpp:53]   --->   Operation 291 'load' 'p_Val2_s' <Predicate = (!icmp_ln52)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_15 : Operation 292 [1/1] (0.75ns)   --->   "br label %.preheader181" [inver_aug.cpp:57]   --->   Operation 292 'br' <Predicate = (icmp_ln52)> <Delay = 0.75>

State 16 <SV = 6> <Delay = 3.06>
ST_16 : Operation 293 [1/2] (1.35ns)   --->   "%p_Val2_s = load i22* %aug_V_addr_2, align 4" [inver_aug.cpp:53]   --->   Operation 293 'load' 'p_Val2_s' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_16 : Operation 294 [1/1] (0.00ns)   --->   "%t_V = call i36 @_ssdm_op_BitConcatenate.i36.i22.i14(i22 %p_Val2_s, i14 0)" [inver_aug.cpp:53]   --->   Operation 294 'bitconcatenate' 't_V' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 295 [40/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 295 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 7> <Delay = 1.71>
ST_17 : Operation 296 [39/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 296 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 8> <Delay = 1.71>
ST_18 : Operation 297 [38/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 297 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 9> <Delay = 1.71>
ST_19 : Operation 298 [37/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 298 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 10> <Delay = 1.71>
ST_20 : Operation 299 [36/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 299 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 11> <Delay = 1.71>
ST_21 : Operation 300 [35/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 300 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 12> <Delay = 1.71>
ST_22 : Operation 301 [34/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 301 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 13> <Delay = 1.71>
ST_23 : Operation 302 [33/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 302 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 14> <Delay = 1.71>
ST_24 : Operation 303 [32/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 303 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 15> <Delay = 1.71>
ST_25 : Operation 304 [31/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 304 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 16> <Delay = 1.71>
ST_26 : Operation 305 [30/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 305 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 17> <Delay = 1.71>
ST_27 : Operation 306 [29/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 306 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 28 <SV = 18> <Delay = 1.71>
ST_28 : Operation 307 [28/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 307 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 29 <SV = 19> <Delay = 1.71>
ST_29 : Operation 308 [27/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 308 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 30 <SV = 20> <Delay = 1.71>
ST_30 : Operation 309 [26/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 309 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 31 <SV = 21> <Delay = 1.71>
ST_31 : Operation 310 [25/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 310 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 32 <SV = 22> <Delay = 1.71>
ST_32 : Operation 311 [24/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 311 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 33 <SV = 23> <Delay = 1.71>
ST_33 : Operation 312 [23/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 312 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 34 <SV = 24> <Delay = 1.71>
ST_34 : Operation 313 [22/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 313 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 35 <SV = 25> <Delay = 1.71>
ST_35 : Operation 314 [21/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 314 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 36 <SV = 26> <Delay = 1.71>
ST_36 : Operation 315 [20/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 315 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 37 <SV = 27> <Delay = 1.71>
ST_37 : Operation 316 [19/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 316 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 38 <SV = 28> <Delay = 1.71>
ST_38 : Operation 317 [18/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 317 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 39 <SV = 29> <Delay = 1.71>
ST_39 : Operation 318 [17/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 318 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 40 <SV = 30> <Delay = 1.71>
ST_40 : Operation 319 [16/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 319 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 41 <SV = 31> <Delay = 1.71>
ST_41 : Operation 320 [15/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 320 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 42 <SV = 32> <Delay = 1.71>
ST_42 : Operation 321 [14/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 321 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 43 <SV = 33> <Delay = 1.71>
ST_43 : Operation 322 [13/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 322 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 44 <SV = 34> <Delay = 1.71>
ST_44 : Operation 323 [12/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 323 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 45 <SV = 35> <Delay = 1.71>
ST_45 : Operation 324 [11/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 324 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 46 <SV = 36> <Delay = 1.71>
ST_46 : Operation 325 [10/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 325 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 47 <SV = 37> <Delay = 1.71>
ST_47 : Operation 326 [9/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 326 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 48 <SV = 38> <Delay = 1.71>
ST_48 : Operation 327 [8/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 327 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 49 <SV = 39> <Delay = 1.71>
ST_49 : Operation 328 [7/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 328 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 50 <SV = 40> <Delay = 1.71>
ST_50 : Operation 329 [6/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 329 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 51 <SV = 41> <Delay = 1.71>
ST_51 : Operation 330 [5/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 330 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 52 <SV = 42> <Delay = 1.71>
ST_52 : Operation 331 [4/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 331 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 53 <SV = 43> <Delay = 1.71>
ST_53 : Operation 332 [3/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 332 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 54 <SV = 44> <Delay = 1.71>
ST_54 : Operation 333 [2/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 333 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 55 <SV = 45> <Delay = 3.06>
ST_55 : Operation 334 [1/40] (1.71ns)   --->   "%sdiv_ln1148 = sdiv i36 %t_V, %sext_ln1148" [inver_aug.cpp:53]   --->   Operation 334 'sdiv' 'sdiv_ln1148' <Predicate = true> <Delay = 1.71> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 39> <II = 22> <Delay = 1.71> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 335 [1/1] (0.00ns)   --->   "%trunc_ln703 = trunc i36 %sdiv_ln1148 to i22" [inver_aug.cpp:53]   --->   Operation 335 'trunc' 'trunc_ln703' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 336 [1/1] (1.35ns)   --->   "store i22 %trunc_ln703, i22* %aug_V_addr_2, align 4" [inver_aug.cpp:53]   --->   Operation 336 'store' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_55 : Operation 337 [1/1] (0.00ns)   --->   "br label %0" [inver_aug.cpp:52]   --->   Operation 337 'br' <Predicate = true> <Delay = 0.00>

State 56 <SV = 6> <Delay = 3.17>
ST_56 : Operation 338 [1/1] (0.00ns)   --->   "%j_3 = phi i4 [ %j_1, %.loopexit ], [ 0, %.preheader181.preheader ]"   --->   Operation 338 'phi' 'j_3' <Predicate = true> <Delay = 0.00>
ST_56 : Operation 339 [1/1] (0.88ns)   --->   "%icmp_ln57 = icmp eq i4 %j_3, -6" [inver_aug.cpp:57]   --->   Operation 339 'icmp' 'icmp_ln57' <Predicate = true> <Delay = 0.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 340 [1/1] (0.00ns)   --->   "%empty_10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)"   --->   Operation 340 'speclooptripcount' 'empty_10' <Predicate = true> <Delay = 0.00>
ST_56 : Operation 341 [1/1] (0.86ns)   --->   "%j_1 = add i4 %j_3, 1" [inver_aug.cpp:57]   --->   Operation 341 'add' 'j_1' <Predicate = true> <Delay = 0.86> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 342 [1/1] (0.00ns)   --->   "br i1 %icmp_ln57, label %Row_Operation_end, label %1" [inver_aug.cpp:57]   --->   Operation 342 'br' <Predicate = true> <Delay = 0.00>
ST_56 : Operation 343 [1/1] (0.88ns)   --->   "%icmp_ln58 = icmp eq i4 %i_1, %j_3" [inver_aug.cpp:58]   --->   Operation 343 'icmp' 'icmp_ln58' <Predicate = (!icmp_ln57)> <Delay = 0.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 344 [1/1] (0.00ns)   --->   "br i1 %icmp_ln58, label %.loopexit, label %2" [inver_aug.cpp:58]   --->   Operation 344 'br' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_56 : Operation 345 [1/1] (0.00ns)   --->   "%tmp_12 = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %j_3, i4 0)" [inver_aug.cpp:59]   --->   Operation 345 'bitconcatenate' 'tmp_12' <Predicate = (!icmp_ln57 & !icmp_ln58)> <Delay = 0.00>
ST_56 : Operation 346 [1/1] (0.00ns)   --->   "%zext_ln203_16 = zext i8 %tmp_12 to i9" [inver_aug.cpp:59]   --->   Operation 346 'zext' 'zext_ln203_16' <Predicate = (!icmp_ln57 & !icmp_ln58)> <Delay = 0.00>
ST_56 : Operation 347 [1/1] (0.00ns)   --->   "%tmp_13 = call i6 @_ssdm_op_BitConcatenate.i6.i4.i2(i4 %j_3, i2 0)" [inver_aug.cpp:59]   --->   Operation 347 'bitconcatenate' 'tmp_13' <Predicate = (!icmp_ln57 & !icmp_ln58)> <Delay = 0.00>
ST_56 : Operation 348 [1/1] (0.00ns)   --->   "%zext_ln203_17 = zext i6 %tmp_13 to i9" [inver_aug.cpp:59]   --->   Operation 348 'zext' 'zext_ln203_17' <Predicate = (!icmp_ln57 & !icmp_ln58)> <Delay = 0.00>
ST_56 : Operation 349 [1/1] (0.90ns)   --->   "%add_ln203_39 = add i9 %zext_ln203_17, %zext_ln203_16" [inver_aug.cpp:59]   --->   Operation 349 'add' 'add_ln203_39' <Predicate = (!icmp_ln57 & !icmp_ln58)> <Delay = 0.90> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 350 [1/1] (0.92ns)   --->   "%add_ln203_40 = add i9 %add_ln203_39, %zext_ln203_6" [inver_aug.cpp:59]   --->   Operation 350 'add' 'add_ln203_40' <Predicate = (!icmp_ln57 & !icmp_ln58)> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 351 [1/1] (0.00ns)   --->   "%zext_ln203_18 = zext i9 %add_ln203_40 to i64" [inver_aug.cpp:59]   --->   Operation 351 'zext' 'zext_ln203_18' <Predicate = (!icmp_ln57 & !icmp_ln58)> <Delay = 0.00>
ST_56 : Operation 352 [1/1] (0.00ns)   --->   "%aug_V_addr_4 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %zext_ln203_18" [inver_aug.cpp:59]   --->   Operation 352 'getelementptr' 'aug_V_addr_4' <Predicate = (!icmp_ln57 & !icmp_ln58)> <Delay = 0.00>
ST_56 : Operation 353 [2/2] (1.35ns)   --->   "%temp_V_1 = load i22* %aug_V_addr_4, align 4" [inver_aug.cpp:59]   --->   Operation 353 'load' 'temp_V_1' <Predicate = (!icmp_ln57 & !icmp_ln58)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_56 : Operation 354 [1/1] (0.00ns)   --->   "%empty_12 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str4, i32 %tmp_2)" [inver_aug.cpp:65]   --->   Operation 354 'specregionend' 'empty_12' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_56 : Operation 355 [1/1] (0.00ns)   --->   "br label %.preheader182" [inver_aug.cpp:47]   --->   Operation 355 'br' <Predicate = (icmp_ln57)> <Delay = 0.00>

State 57 <SV = 7> <Delay = 1.35>
ST_57 : Operation 356 [1/2] (1.35ns)   --->   "%temp_V_1 = load i22* %aug_V_addr_4, align 4" [inver_aug.cpp:59]   --->   Operation 356 'load' 'temp_V_1' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_57 : Operation 357 [1/1] (0.00ns)   --->   "%sext_ln1193 = sext i22 %temp_V_1 to i36" [inver_aug.cpp:61]   --->   Operation 357 'sext' 'sext_ln1193' <Predicate = true> <Delay = 0.00>
ST_57 : Operation 358 [1/1] (0.75ns)   --->   "br label %3" [inver_aug.cpp:60]   --->   Operation 358 'br' <Predicate = true> <Delay = 0.75>

State 58 <SV = 8> <Delay = 2.27>
ST_58 : Operation 359 [1/1] (0.00ns)   --->   "%k_0 = phi i5 [ 0, %2 ], [ %k, %_ZN13ap_fixed_baseILi45ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi22ELi8ELb1ELS0_5ELS1_3ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit.i.i ]"   --->   Operation 359 'phi' 'k_0' <Predicate = (!icmp_ln58)> <Delay = 0.00>
ST_58 : Operation 360 [1/1] (0.87ns)   --->   "%icmp_ln60 = icmp eq i5 %k_0, -12" [inver_aug.cpp:60]   --->   Operation 360 'icmp' 'icmp_ln60' <Predicate = (!icmp_ln58)> <Delay = 0.87> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_58 : Operation 361 [1/1] (0.00ns)   --->   "%empty_11 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 20, i64 20, i64 20)"   --->   Operation 361 'speclooptripcount' 'empty_11' <Predicate = (!icmp_ln58)> <Delay = 0.00>
ST_58 : Operation 362 [1/1] (0.87ns)   --->   "%k = add i5 %k_0, 1" [inver_aug.cpp:60]   --->   Operation 362 'add' 'k' <Predicate = (!icmp_ln58)> <Delay = 0.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_58 : Operation 363 [1/1] (0.00ns)   --->   "br i1 %icmp_ln60, label %.loopexit.loopexit, label %_ZN13ap_fixed_baseILi45ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi22ELi8ELb1ELS0_5ELS1_3ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit.i.i" [inver_aug.cpp:60]   --->   Operation 363 'br' <Predicate = (!icmp_ln58)> <Delay = 0.00>
ST_58 : Operation 364 [1/1] (0.00ns)   --->   "%zext_ln1116 = zext i5 %k_0 to i9" [inver_aug.cpp:61]   --->   Operation 364 'zext' 'zext_ln1116' <Predicate = (!icmp_ln58 & !icmp_ln60)> <Delay = 0.00>
ST_58 : Operation 365 [1/1] (0.92ns)   --->   "%add_ln1116 = add i9 %zext_ln1116, %add_ln203_17" [inver_aug.cpp:61]   --->   Operation 365 'add' 'add_ln1116' <Predicate = (!icmp_ln58 & !icmp_ln60)> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_58 : Operation 366 [1/1] (0.00ns)   --->   "%zext_ln1116_1 = zext i9 %add_ln1116 to i64" [inver_aug.cpp:61]   --->   Operation 366 'zext' 'zext_ln1116_1' <Predicate = (!icmp_ln58 & !icmp_ln60)> <Delay = 0.00>
ST_58 : Operation 367 [1/1] (0.00ns)   --->   "%aug_V_addr_6 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %zext_ln1116_1" [inver_aug.cpp:61]   --->   Operation 367 'getelementptr' 'aug_V_addr_6' <Predicate = (!icmp_ln58 & !icmp_ln60)> <Delay = 0.00>
ST_58 : Operation 368 [1/1] (0.92ns)   --->   "%add_ln1265_1 = add i9 %zext_ln1116, %add_ln203_39" [inver_aug.cpp:61]   --->   Operation 368 'add' 'add_ln1265_1' <Predicate = (!icmp_ln58 & !icmp_ln60)> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_58 : Operation 369 [1/1] (0.00ns)   --->   "%zext_ln1265_2 = zext i9 %add_ln1265_1 to i64" [inver_aug.cpp:61]   --->   Operation 369 'zext' 'zext_ln1265_2' <Predicate = (!icmp_ln58 & !icmp_ln60)> <Delay = 0.00>
ST_58 : Operation 370 [1/1] (0.00ns)   --->   "%aug_V_addr_7 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %zext_ln1265_2" [inver_aug.cpp:61]   --->   Operation 370 'getelementptr' 'aug_V_addr_7' <Predicate = (!icmp_ln58 & !icmp_ln60)> <Delay = 0.00>
ST_58 : Operation 371 [2/2] (1.35ns)   --->   "%aug_V_load_2 = load i22* %aug_V_addr_6, align 4" [inver_aug.cpp:61]   --->   Operation 371 'load' 'aug_V_load_2' <Predicate = (!icmp_ln58 & !icmp_ln60)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_58 : Operation 372 [2/2] (1.35ns)   --->   "%p_Val2_1 = load i22* %aug_V_addr_7, align 4" [inver_aug.cpp:61]   --->   Operation 372 'load' 'p_Val2_1' <Predicate = (!icmp_ln58 & !icmp_ln60)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_58 : Operation 373 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 373 'br' <Predicate = (!icmp_ln58 & icmp_ln60)> <Delay = 0.00>
ST_58 : Operation 374 [1/1] (0.00ns)   --->   "br label %.preheader181" [inver_aug.cpp:57]   --->   Operation 374 'br' <Predicate = (icmp_ln60) | (icmp_ln58)> <Delay = 0.00>

State 59 <SV = 9> <Delay = 7.16>
ST_59 : Operation 375 [1/2] (1.35ns)   --->   "%aug_V_load_2 = load i22* %aug_V_addr_6, align 4" [inver_aug.cpp:61]   --->   Operation 375 'load' 'aug_V_load_2' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_59 : Operation 376 [1/1] (0.00ns)   --->   "%sext_ln1193_1 = sext i22 %aug_V_load_2 to i36" [inver_aug.cpp:61]   --->   Operation 376 'sext' 'sext_ln1193_1' <Predicate = true> <Delay = 0.00>
ST_59 : Operation 377 [1/1] (3.24ns)   --->   "%mul_ln1193 = mul i36 %sext_ln1193, %sext_ln1193_1" [inver_aug.cpp:61]   --->   Operation 377 'mul' 'mul_ln1193' <Predicate = true> <Delay = 3.24> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.24> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_59 : Operation 378 [1/2] (1.35ns)   --->   "%p_Val2_1 = load i22* %aug_V_addr_7, align 4" [inver_aug.cpp:61]   --->   Operation 378 'load' 'p_Val2_1' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_59 : Operation 379 [1/1] (0.00ns)   --->   "%lhs_V = call i36 @_ssdm_op_BitConcatenate.i36.i22.i14(i22 %p_Val2_1, i14 0)" [inver_aug.cpp:61]   --->   Operation 379 'bitconcatenate' 'lhs_V' <Predicate = true> <Delay = 0.00>
ST_59 : Operation 380 [1/1] (1.21ns)   --->   "%ret_V = sub i36 %lhs_V, %mul_ln1193" [inver_aug.cpp:61]   --->   Operation 380 'sub' 'ret_V' <Predicate = true> <Delay = 1.21> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_59 : Operation 381 [1/1] (0.00ns)   --->   "%trunc_ln2 = call i22 @_ssdm_op_PartSelect.i22.i36.i32.i32(i36 %ret_V, i32 14, i32 35)" [inver_aug.cpp:61]   --->   Operation 381 'partselect' 'trunc_ln2' <Predicate = true> <Delay = 0.00>
ST_59 : Operation 382 [1/1] (1.35ns)   --->   "store i22 %trunc_ln2, i22* %aug_V_addr_7, align 4" [inver_aug.cpp:61]   --->   Operation 382 'store' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_59 : Operation 383 [1/1] (0.00ns)   --->   "br label %3" [inver_aug.cpp:60]   --->   Operation 383 'br' <Predicate = true> <Delay = 0.00>

State 60 <SV = 4> <Delay = 3.17>
ST_60 : Operation 384 [1/1] (0.00ns)   --->   "%i_2 = phi i4 [ %i_3, %Extract_loop ], [ 0, %.preheader.preheader ]"   --->   Operation 384 'phi' 'i_2' <Predicate = true> <Delay = 0.00>
ST_60 : Operation 385 [1/1] (0.88ns)   --->   "%icmp_ln69 = icmp eq i4 %i_2, -6" [inver_aug.cpp:69]   --->   Operation 385 'icmp' 'icmp_ln69' <Predicate = true> <Delay = 0.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_60 : Operation 386 [1/1] (0.00ns)   --->   "%empty_13 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)"   --->   Operation 386 'speclooptripcount' 'empty_13' <Predicate = true> <Delay = 0.00>
ST_60 : Operation 387 [1/1] (0.86ns)   --->   "%i_3 = add i4 %i_2, 1" [inver_aug.cpp:69]   --->   Operation 387 'add' 'i_3' <Predicate = true> <Delay = 0.86> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_60 : Operation 388 [1/1] (0.00ns)   --->   "br i1 %icmp_ln69, label %4, label %Extract_loop" [inver_aug.cpp:69]   --->   Operation 388 'br' <Predicate = true> <Delay = 0.00>
ST_60 : Operation 389 [1/1] (0.00ns)   --->   "%tmp_8 = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %i_2, i3 0)" [inver_aug.cpp:72]   --->   Operation 389 'bitconcatenate' 'tmp_8' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_60 : Operation 390 [1/1] (0.00ns)   --->   "%zext_ln203_10 = zext i7 %tmp_8 to i8" [inver_aug.cpp:72]   --->   Operation 390 'zext' 'zext_ln203_10' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_60 : Operation 391 [1/1] (0.00ns)   --->   "%tmp_9 = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %i_2, i1 false)" [inver_aug.cpp:72]   --->   Operation 391 'bitconcatenate' 'tmp_9' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_60 : Operation 392 [1/1] (0.00ns)   --->   "%zext_ln203_11 = zext i5 %tmp_9 to i8" [inver_aug.cpp:72]   --->   Operation 392 'zext' 'zext_ln203_11' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_60 : Operation 393 [1/1] (0.89ns)   --->   "%add_ln203_19 = add i8 %zext_ln203_11, %zext_ln203_10" [inver_aug.cpp:72]   --->   Operation 393 'add' 'add_ln203_19' <Predicate = (!icmp_ln69)> <Delay = 0.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_60 : Operation 394 [1/1] (0.00ns)   --->   "%tmp_10 = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %i_2, i4 0)" [inver_aug.cpp:72]   --->   Operation 394 'bitconcatenate' 'tmp_10' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_60 : Operation 395 [1/1] (0.00ns)   --->   "%zext_ln203_14 = zext i8 %tmp_10 to i9" [inver_aug.cpp:72]   --->   Operation 395 'zext' 'zext_ln203_14' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_60 : Operation 396 [1/1] (0.00ns)   --->   "%tmp_11 = call i6 @_ssdm_op_BitConcatenate.i6.i4.i2(i4 %i_2, i2 0)" [inver_aug.cpp:72]   --->   Operation 396 'bitconcatenate' 'tmp_11' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_60 : Operation 397 [1/1] (0.00ns)   --->   "%zext_ln203_15 = zext i6 %tmp_11 to i9" [inver_aug.cpp:72]   --->   Operation 397 'zext' 'zext_ln203_15' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_60 : Operation 398 [1/1] (0.90ns)   --->   "%add_ln203_28 = add i9 %zext_ln203_15, %zext_ln203_14" [inver_aug.cpp:72]   --->   Operation 398 'add' 'add_ln203_28' <Predicate = (!icmp_ln69)> <Delay = 0.90> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_60 : Operation 399 [1/1] (0.92ns)   --->   "%add_ln203_29 = add i9 %add_ln203_28, 10" [inver_aug.cpp:72]   --->   Operation 399 'add' 'add_ln203_29' <Predicate = (!icmp_ln69)> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_60 : Operation 400 [1/1] (0.00ns)   --->   "%sext_ln203_24 = sext i9 %add_ln203_29 to i64" [inver_aug.cpp:72]   --->   Operation 400 'sext' 'sext_ln203_24' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_60 : Operation 401 [1/1] (0.00ns)   --->   "%aug_V_addr_16 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %sext_ln203_24" [inver_aug.cpp:72]   --->   Operation 401 'getelementptr' 'aug_V_addr_16' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_60 : Operation 402 [1/1] (0.92ns)   --->   "%add_ln203_30 = add i9 %add_ln203_28, 11" [inver_aug.cpp:72]   --->   Operation 402 'add' 'add_ln203_30' <Predicate = (!icmp_ln69)> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_60 : Operation 403 [1/1] (0.00ns)   --->   "%sext_ln203_25 = sext i9 %add_ln203_30 to i64" [inver_aug.cpp:72]   --->   Operation 403 'sext' 'sext_ln203_25' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_60 : Operation 404 [1/1] (0.00ns)   --->   "%aug_V_addr_17 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %sext_ln203_25" [inver_aug.cpp:72]   --->   Operation 404 'getelementptr' 'aug_V_addr_17' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_60 : Operation 405 [2/2] (1.35ns)   --->   "%aug_V_load = load i22* %aug_V_addr_16, align 4" [inver_aug.cpp:72]   --->   Operation 405 'load' 'aug_V_load' <Predicate = (!icmp_ln69)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_60 : Operation 406 [2/2] (1.35ns)   --->   "%aug_V_load_1 = load i22* %aug_V_addr_17, align 4" [inver_aug.cpp:72]   --->   Operation 406 'load' 'aug_V_load_1' <Predicate = (!icmp_ln69)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>

State 61 <SV = 5> <Delay = 2.70>
ST_61 : Operation 407 [1/1] (0.00ns)   --->   "%zext_ln203_12 = zext i8 %add_ln203_19 to i64" [inver_aug.cpp:72]   --->   Operation 407 'zext' 'zext_ln203_12' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_61 : Operation 408 [1/1] (0.00ns)   --->   "%B_V_addr = getelementptr [100 x i22]* %B_V, i64 0, i64 %zext_ln203_12" [inver_aug.cpp:72]   --->   Operation 408 'getelementptr' 'B_V_addr' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_61 : Operation 409 [1/1] (0.00ns)   --->   "%or_ln203_3 = or i8 %add_ln203_19, 1" [inver_aug.cpp:72]   --->   Operation 409 'or' 'or_ln203_3' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_61 : Operation 410 [1/1] (0.00ns)   --->   "%zext_ln203_13 = zext i8 %or_ln203_3 to i64" [inver_aug.cpp:72]   --->   Operation 410 'zext' 'zext_ln203_13' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_61 : Operation 411 [1/1] (0.00ns)   --->   "%B_V_addr_1 = getelementptr [100 x i22]* %B_V, i64 0, i64 %zext_ln203_13" [inver_aug.cpp:72]   --->   Operation 411 'getelementptr' 'B_V_addr_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_61 : Operation 412 [1/1] (0.92ns)   --->   "%add_ln203_31 = add i9 %add_ln203_28, 12" [inver_aug.cpp:72]   --->   Operation 412 'add' 'add_ln203_31' <Predicate = (!icmp_ln69)> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_61 : Operation 413 [1/1] (0.00ns)   --->   "%sext_ln203_26 = sext i9 %add_ln203_31 to i64" [inver_aug.cpp:72]   --->   Operation 413 'sext' 'sext_ln203_26' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_61 : Operation 414 [1/1] (0.00ns)   --->   "%aug_V_addr_18 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %sext_ln203_26" [inver_aug.cpp:72]   --->   Operation 414 'getelementptr' 'aug_V_addr_18' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_61 : Operation 415 [1/1] (0.92ns)   --->   "%add_ln203_32 = add i9 %add_ln203_28, 13" [inver_aug.cpp:72]   --->   Operation 415 'add' 'add_ln203_32' <Predicate = (!icmp_ln69)> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_61 : Operation 416 [1/1] (0.00ns)   --->   "%sext_ln203_27 = sext i9 %add_ln203_32 to i64" [inver_aug.cpp:72]   --->   Operation 416 'sext' 'sext_ln203_27' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_61 : Operation 417 [1/1] (0.00ns)   --->   "%aug_V_addr_19 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %sext_ln203_27" [inver_aug.cpp:72]   --->   Operation 417 'getelementptr' 'aug_V_addr_19' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_61 : Operation 418 [1/2] (1.35ns)   --->   "%aug_V_load = load i22* %aug_V_addr_16, align 4" [inver_aug.cpp:72]   --->   Operation 418 'load' 'aug_V_load' <Predicate = (!icmp_ln69)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_61 : Operation 419 [1/1] (1.35ns)   --->   "store i22 %aug_V_load, i22* %B_V_addr, align 4" [inver_aug.cpp:72]   --->   Operation 419 'store' <Predicate = (!icmp_ln69)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_61 : Operation 420 [1/2] (1.35ns)   --->   "%aug_V_load_1 = load i22* %aug_V_addr_17, align 4" [inver_aug.cpp:72]   --->   Operation 420 'load' 'aug_V_load_1' <Predicate = (!icmp_ln69)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_61 : Operation 421 [1/1] (1.35ns)   --->   "store i22 %aug_V_load_1, i22* %B_V_addr_1, align 4" [inver_aug.cpp:72]   --->   Operation 421 'store' <Predicate = (!icmp_ln69)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_61 : Operation 422 [2/2] (1.35ns)   --->   "%aug_V_load_10 = load i22* %aug_V_addr_18, align 4" [inver_aug.cpp:72]   --->   Operation 422 'load' 'aug_V_load_10' <Predicate = (!icmp_ln69)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_61 : Operation 423 [2/2] (1.35ns)   --->   "%aug_V_load_3 = load i22* %aug_V_addr_19, align 4" [inver_aug.cpp:72]   --->   Operation 423 'load' 'aug_V_load_3' <Predicate = (!icmp_ln69)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>

State 62 <SV = 6> <Delay = 2.70>
ST_62 : Operation 424 [1/1] (0.90ns)   --->   "%add_ln203_20 = add i8 %add_ln203_19, 2" [inver_aug.cpp:72]   --->   Operation 424 'add' 'add_ln203_20' <Predicate = (!icmp_ln69)> <Delay = 0.90> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 425 [1/1] (0.00ns)   --->   "%sext_ln203_16 = sext i8 %add_ln203_20 to i64" [inver_aug.cpp:72]   --->   Operation 425 'sext' 'sext_ln203_16' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_62 : Operation 426 [1/1] (0.00ns)   --->   "%B_V_addr_2 = getelementptr [100 x i22]* %B_V, i64 0, i64 %sext_ln203_16" [inver_aug.cpp:72]   --->   Operation 426 'getelementptr' 'B_V_addr_2' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_62 : Operation 427 [1/1] (0.90ns)   --->   "%add_ln203_21 = add i8 %add_ln203_19, 3" [inver_aug.cpp:72]   --->   Operation 427 'add' 'add_ln203_21' <Predicate = (!icmp_ln69)> <Delay = 0.90> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 428 [1/1] (0.00ns)   --->   "%sext_ln203_17 = sext i8 %add_ln203_21 to i64" [inver_aug.cpp:72]   --->   Operation 428 'sext' 'sext_ln203_17' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_62 : Operation 429 [1/1] (0.00ns)   --->   "%B_V_addr_3 = getelementptr [100 x i22]* %B_V, i64 0, i64 %sext_ln203_17" [inver_aug.cpp:72]   --->   Operation 429 'getelementptr' 'B_V_addr_3' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_62 : Operation 430 [1/1] (0.92ns)   --->   "%add_ln203_33 = add i9 %add_ln203_28, 14" [inver_aug.cpp:72]   --->   Operation 430 'add' 'add_ln203_33' <Predicate = (!icmp_ln69)> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 431 [1/1] (0.00ns)   --->   "%sext_ln203_28 = sext i9 %add_ln203_33 to i64" [inver_aug.cpp:72]   --->   Operation 431 'sext' 'sext_ln203_28' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_62 : Operation 432 [1/1] (0.00ns)   --->   "%aug_V_addr_20 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %sext_ln203_28" [inver_aug.cpp:72]   --->   Operation 432 'getelementptr' 'aug_V_addr_20' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_62 : Operation 433 [1/1] (0.92ns)   --->   "%add_ln203_34 = add i9 %add_ln203_28, 15" [inver_aug.cpp:72]   --->   Operation 433 'add' 'add_ln203_34' <Predicate = (!icmp_ln69)> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 434 [1/1] (0.00ns)   --->   "%sext_ln203_29 = sext i9 %add_ln203_34 to i64" [inver_aug.cpp:72]   --->   Operation 434 'sext' 'sext_ln203_29' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_62 : Operation 435 [1/1] (0.00ns)   --->   "%aug_V_addr_21 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %sext_ln203_29" [inver_aug.cpp:72]   --->   Operation 435 'getelementptr' 'aug_V_addr_21' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_62 : Operation 436 [1/2] (1.35ns)   --->   "%aug_V_load_10 = load i22* %aug_V_addr_18, align 4" [inver_aug.cpp:72]   --->   Operation 436 'load' 'aug_V_load_10' <Predicate = (!icmp_ln69)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_62 : Operation 437 [1/1] (1.35ns)   --->   "store i22 %aug_V_load_10, i22* %B_V_addr_2, align 4" [inver_aug.cpp:72]   --->   Operation 437 'store' <Predicate = (!icmp_ln69)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_62 : Operation 438 [1/2] (1.35ns)   --->   "%aug_V_load_3 = load i22* %aug_V_addr_19, align 4" [inver_aug.cpp:72]   --->   Operation 438 'load' 'aug_V_load_3' <Predicate = (!icmp_ln69)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_62 : Operation 439 [1/1] (1.35ns)   --->   "store i22 %aug_V_load_3, i22* %B_V_addr_3, align 4" [inver_aug.cpp:72]   --->   Operation 439 'store' <Predicate = (!icmp_ln69)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_62 : Operation 440 [2/2] (1.35ns)   --->   "%aug_V_load_4 = load i22* %aug_V_addr_20, align 4" [inver_aug.cpp:72]   --->   Operation 440 'load' 'aug_V_load_4' <Predicate = (!icmp_ln69)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_62 : Operation 441 [2/2] (1.35ns)   --->   "%aug_V_load_5 = load i22* %aug_V_addr_21, align 4" [inver_aug.cpp:72]   --->   Operation 441 'load' 'aug_V_load_5' <Predicate = (!icmp_ln69)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>

State 63 <SV = 7> <Delay = 2.70>
ST_63 : Operation 442 [1/1] (0.90ns)   --->   "%add_ln203_22 = add i8 %add_ln203_19, 4" [inver_aug.cpp:72]   --->   Operation 442 'add' 'add_ln203_22' <Predicate = (!icmp_ln69)> <Delay = 0.90> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_63 : Operation 443 [1/1] (0.00ns)   --->   "%sext_ln203_18 = sext i8 %add_ln203_22 to i64" [inver_aug.cpp:72]   --->   Operation 443 'sext' 'sext_ln203_18' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_63 : Operation 444 [1/1] (0.00ns)   --->   "%B_V_addr_4 = getelementptr [100 x i22]* %B_V, i64 0, i64 %sext_ln203_18" [inver_aug.cpp:72]   --->   Operation 444 'getelementptr' 'B_V_addr_4' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_63 : Operation 445 [1/1] (0.90ns)   --->   "%add_ln203_23 = add i8 %add_ln203_19, 5" [inver_aug.cpp:72]   --->   Operation 445 'add' 'add_ln203_23' <Predicate = (!icmp_ln69)> <Delay = 0.90> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_63 : Operation 446 [1/1] (0.00ns)   --->   "%sext_ln203_19 = sext i8 %add_ln203_23 to i64" [inver_aug.cpp:72]   --->   Operation 446 'sext' 'sext_ln203_19' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_63 : Operation 447 [1/1] (0.00ns)   --->   "%B_V_addr_5 = getelementptr [100 x i22]* %B_V, i64 0, i64 %sext_ln203_19" [inver_aug.cpp:72]   --->   Operation 447 'getelementptr' 'B_V_addr_5' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_63 : Operation 448 [1/1] (0.92ns)   --->   "%add_ln203_35 = add i9 %add_ln203_28, 16" [inver_aug.cpp:72]   --->   Operation 448 'add' 'add_ln203_35' <Predicate = (!icmp_ln69)> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_63 : Operation 449 [1/1] (0.00ns)   --->   "%sext_ln203_30 = sext i9 %add_ln203_35 to i64" [inver_aug.cpp:72]   --->   Operation 449 'sext' 'sext_ln203_30' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_63 : Operation 450 [1/1] (0.00ns)   --->   "%aug_V_addr_22 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %sext_ln203_30" [inver_aug.cpp:72]   --->   Operation 450 'getelementptr' 'aug_V_addr_22' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_63 : Operation 451 [1/1] (0.92ns)   --->   "%add_ln203_36 = add i9 %add_ln203_28, 17" [inver_aug.cpp:72]   --->   Operation 451 'add' 'add_ln203_36' <Predicate = (!icmp_ln69)> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_63 : Operation 452 [1/1] (0.00ns)   --->   "%sext_ln203_31 = sext i9 %add_ln203_36 to i64" [inver_aug.cpp:72]   --->   Operation 452 'sext' 'sext_ln203_31' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_63 : Operation 453 [1/1] (0.00ns)   --->   "%aug_V_addr_23 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %sext_ln203_31" [inver_aug.cpp:72]   --->   Operation 453 'getelementptr' 'aug_V_addr_23' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_63 : Operation 454 [1/2] (1.35ns)   --->   "%aug_V_load_4 = load i22* %aug_V_addr_20, align 4" [inver_aug.cpp:72]   --->   Operation 454 'load' 'aug_V_load_4' <Predicate = (!icmp_ln69)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_63 : Operation 455 [1/1] (1.35ns)   --->   "store i22 %aug_V_load_4, i22* %B_V_addr_4, align 4" [inver_aug.cpp:72]   --->   Operation 455 'store' <Predicate = (!icmp_ln69)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_63 : Operation 456 [1/2] (1.35ns)   --->   "%aug_V_load_5 = load i22* %aug_V_addr_21, align 4" [inver_aug.cpp:72]   --->   Operation 456 'load' 'aug_V_load_5' <Predicate = (!icmp_ln69)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_63 : Operation 457 [1/1] (1.35ns)   --->   "store i22 %aug_V_load_5, i22* %B_V_addr_5, align 4" [inver_aug.cpp:72]   --->   Operation 457 'store' <Predicate = (!icmp_ln69)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_63 : Operation 458 [2/2] (1.35ns)   --->   "%aug_V_load_6 = load i22* %aug_V_addr_22, align 4" [inver_aug.cpp:72]   --->   Operation 458 'load' 'aug_V_load_6' <Predicate = (!icmp_ln69)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_63 : Operation 459 [2/2] (1.35ns)   --->   "%aug_V_load_7 = load i22* %aug_V_addr_23, align 4" [inver_aug.cpp:72]   --->   Operation 459 'load' 'aug_V_load_7' <Predicate = (!icmp_ln69)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>

State 64 <SV = 8> <Delay = 2.70>
ST_64 : Operation 460 [1/1] (0.90ns)   --->   "%add_ln203_24 = add i8 %add_ln203_19, 6" [inver_aug.cpp:72]   --->   Operation 460 'add' 'add_ln203_24' <Predicate = (!icmp_ln69)> <Delay = 0.90> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_64 : Operation 461 [1/1] (0.00ns)   --->   "%sext_ln203_20 = sext i8 %add_ln203_24 to i64" [inver_aug.cpp:72]   --->   Operation 461 'sext' 'sext_ln203_20' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_64 : Operation 462 [1/1] (0.00ns)   --->   "%B_V_addr_6 = getelementptr [100 x i22]* %B_V, i64 0, i64 %sext_ln203_20" [inver_aug.cpp:72]   --->   Operation 462 'getelementptr' 'B_V_addr_6' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_64 : Operation 463 [1/1] (0.90ns)   --->   "%add_ln203_25 = add i8 %add_ln203_19, 7" [inver_aug.cpp:72]   --->   Operation 463 'add' 'add_ln203_25' <Predicate = (!icmp_ln69)> <Delay = 0.90> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_64 : Operation 464 [1/1] (0.00ns)   --->   "%sext_ln203_21 = sext i8 %add_ln203_25 to i64" [inver_aug.cpp:72]   --->   Operation 464 'sext' 'sext_ln203_21' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_64 : Operation 465 [1/1] (0.00ns)   --->   "%B_V_addr_7 = getelementptr [100 x i22]* %B_V, i64 0, i64 %sext_ln203_21" [inver_aug.cpp:72]   --->   Operation 465 'getelementptr' 'B_V_addr_7' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_64 : Operation 466 [1/1] (0.92ns)   --->   "%add_ln203_37 = add i9 %add_ln203_28, 18" [inver_aug.cpp:72]   --->   Operation 466 'add' 'add_ln203_37' <Predicate = (!icmp_ln69)> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_64 : Operation 467 [1/1] (0.00ns)   --->   "%sext_ln203_32 = sext i9 %add_ln203_37 to i64" [inver_aug.cpp:72]   --->   Operation 467 'sext' 'sext_ln203_32' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_64 : Operation 468 [1/1] (0.00ns)   --->   "%aug_V_addr_24 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %sext_ln203_32" [inver_aug.cpp:72]   --->   Operation 468 'getelementptr' 'aug_V_addr_24' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_64 : Operation 469 [1/1] (0.92ns)   --->   "%add_ln203_38 = add i9 %add_ln203_28, 19" [inver_aug.cpp:72]   --->   Operation 469 'add' 'add_ln203_38' <Predicate = (!icmp_ln69)> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_64 : Operation 470 [1/1] (0.00ns)   --->   "%sext_ln203_33 = sext i9 %add_ln203_38 to i64" [inver_aug.cpp:72]   --->   Operation 470 'sext' 'sext_ln203_33' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_64 : Operation 471 [1/1] (0.00ns)   --->   "%aug_V_addr_25 = getelementptr [200 x i22]* %aug_V, i64 0, i64 %sext_ln203_33" [inver_aug.cpp:72]   --->   Operation 471 'getelementptr' 'aug_V_addr_25' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_64 : Operation 472 [1/2] (1.35ns)   --->   "%aug_V_load_6 = load i22* %aug_V_addr_22, align 4" [inver_aug.cpp:72]   --->   Operation 472 'load' 'aug_V_load_6' <Predicate = (!icmp_ln69)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_64 : Operation 473 [1/1] (1.35ns)   --->   "store i22 %aug_V_load_6, i22* %B_V_addr_6, align 4" [inver_aug.cpp:72]   --->   Operation 473 'store' <Predicate = (!icmp_ln69)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_64 : Operation 474 [1/2] (1.35ns)   --->   "%aug_V_load_7 = load i22* %aug_V_addr_23, align 4" [inver_aug.cpp:72]   --->   Operation 474 'load' 'aug_V_load_7' <Predicate = (!icmp_ln69)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_64 : Operation 475 [1/1] (1.35ns)   --->   "store i22 %aug_V_load_7, i22* %B_V_addr_7, align 4" [inver_aug.cpp:72]   --->   Operation 475 'store' <Predicate = (!icmp_ln69)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_64 : Operation 476 [2/2] (1.35ns)   --->   "%aug_V_load_8 = load i22* %aug_V_addr_24, align 4" [inver_aug.cpp:72]   --->   Operation 476 'load' 'aug_V_load_8' <Predicate = (!icmp_ln69)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_64 : Operation 477 [2/2] (1.35ns)   --->   "%aug_V_load_9 = load i22* %aug_V_addr_25, align 4" [inver_aug.cpp:72]   --->   Operation 477 'load' 'aug_V_load_9' <Predicate = (!icmp_ln69)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>

State 65 <SV = 9> <Delay = 2.70>
ST_65 : Operation 478 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([13 x i8]* @p_str5) nounwind" [inver_aug.cpp:69]   --->   Operation 478 'specloopname' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_65 : Operation 479 [1/1] (0.00ns)   --->   "%tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str5)" [inver_aug.cpp:69]   --->   Operation 479 'specregionbegin' 'tmp_4' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_65 : Operation 480 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [inver_aug.cpp:70]   --->   Operation 480 'specpipeline' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_65 : Operation 481 [1/1] (0.90ns)   --->   "%add_ln203_26 = add i8 %add_ln203_19, 8" [inver_aug.cpp:72]   --->   Operation 481 'add' 'add_ln203_26' <Predicate = (!icmp_ln69)> <Delay = 0.90> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_65 : Operation 482 [1/1] (0.00ns)   --->   "%sext_ln203_22 = sext i8 %add_ln203_26 to i64" [inver_aug.cpp:72]   --->   Operation 482 'sext' 'sext_ln203_22' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_65 : Operation 483 [1/1] (0.00ns)   --->   "%B_V_addr_8 = getelementptr [100 x i22]* %B_V, i64 0, i64 %sext_ln203_22" [inver_aug.cpp:72]   --->   Operation 483 'getelementptr' 'B_V_addr_8' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_65 : Operation 484 [1/1] (0.90ns)   --->   "%add_ln203_27 = add i8 %add_ln203_19, 9" [inver_aug.cpp:72]   --->   Operation 484 'add' 'add_ln203_27' <Predicate = (!icmp_ln69)> <Delay = 0.90> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_65 : Operation 485 [1/1] (0.00ns)   --->   "%sext_ln203_23 = sext i8 %add_ln203_27 to i64" [inver_aug.cpp:72]   --->   Operation 485 'sext' 'sext_ln203_23' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_65 : Operation 486 [1/1] (0.00ns)   --->   "%B_V_addr_9 = getelementptr [100 x i22]* %B_V, i64 0, i64 %sext_ln203_23" [inver_aug.cpp:72]   --->   Operation 486 'getelementptr' 'B_V_addr_9' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_65 : Operation 487 [1/2] (1.35ns)   --->   "%aug_V_load_8 = load i22* %aug_V_addr_24, align 4" [inver_aug.cpp:72]   --->   Operation 487 'load' 'aug_V_load_8' <Predicate = (!icmp_ln69)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_65 : Operation 488 [1/1] (1.35ns)   --->   "store i22 %aug_V_load_8, i22* %B_V_addr_8, align 4" [inver_aug.cpp:72]   --->   Operation 488 'store' <Predicate = (!icmp_ln69)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_65 : Operation 489 [1/2] (1.35ns)   --->   "%aug_V_load_9 = load i22* %aug_V_addr_25, align 4" [inver_aug.cpp:72]   --->   Operation 489 'load' 'aug_V_load_9' <Predicate = (!icmp_ln69)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_65 : Operation 490 [1/1] (1.35ns)   --->   "store i22 %aug_V_load_9, i22* %B_V_addr_9, align 4" [inver_aug.cpp:72]   --->   Operation 490 'store' <Predicate = (!icmp_ln69)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 200> <RAM>
ST_65 : Operation 491 [1/1] (0.00ns)   --->   "%empty_14 = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str5, i32 %tmp_4)" [inver_aug.cpp:74]   --->   Operation 491 'specregionend' 'empty_14' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_65 : Operation 492 [1/1] (0.00ns)   --->   "br label %.preheader" [inver_aug.cpp:69]   --->   Operation 492 'br' <Predicate = (!icmp_ln69)> <Delay = 0.00>

State 66 <SV = 5> <Delay = 0.00>
ST_66 : Operation 493 [1/1] (0.00ns)   --->   "ret void" [inver_aug.cpp:75]   --->   Operation 493 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.755ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', inver_aug.cpp:34) [9]  (0.755 ns)

 <State 2>: 3.18ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', inver_aug.cpp:34) [9]  (0 ns)
	'add' operation ('add_ln203', inver_aug.cpp:37) [56]  (0.907 ns)
	'add' operation ('add_ln203_7', inver_aug.cpp:41) [86]  (0.921 ns)
	'getelementptr' operation ('aug_V_addr_15', inver_aug.cpp:41) [88]  (0 ns)
	'store' operation ('store_ln41', inver_aug.cpp:41) of variable 'select_ln41', inver_aug.cpp:41 on array 'aug.V', inver_aug.cpp:30 [158]  (1.35 ns)

 <State 3>: 2.27ns
The critical path consists of the following:
	'add' operation ('add_ln203_9', inver_aug.cpp:41) [92]  (0.921 ns)
	'getelementptr' operation ('aug_V_addr_27', inver_aug.cpp:41) [94]  (0 ns)
	'store' operation ('store_ln41', inver_aug.cpp:41) of variable 'select_ln41_2', inver_aug.cpp:41 on array 'aug.V', inver_aug.cpp:30 [164]  (1.35 ns)

 <State 4>: 2.27ns
The critical path consists of the following:
	'add' operation ('add_ln203_11', inver_aug.cpp:41) [98]  (0.921 ns)
	'getelementptr' operation ('aug_V_addr_29', inver_aug.cpp:41) [100]  (0 ns)
	'store' operation ('store_ln41', inver_aug.cpp:41) of variable 'select_ln41_4', inver_aug.cpp:41 on array 'aug.V', inver_aug.cpp:30 [170]  (1.35 ns)

 <State 5>: 2.27ns
The critical path consists of the following:
	'add' operation ('add_ln203_13', inver_aug.cpp:41) [104]  (0.921 ns)
	'getelementptr' operation ('aug_V_addr_31', inver_aug.cpp:41) [106]  (0 ns)
	'store' operation ('store_ln41', inver_aug.cpp:41) of variable 'select_ln41_6', inver_aug.cpp:41 on array 'aug.V', inver_aug.cpp:30 [176]  (1.35 ns)

 <State 6>: 2.27ns
The critical path consists of the following:
	'add' operation ('add_ln203_15', inver_aug.cpp:41) [110]  (0.921 ns)
	'getelementptr' operation ('aug_V_addr_33', inver_aug.cpp:41) [112]  (0 ns)
	'store' operation ('store_ln41', inver_aug.cpp:41) of variable 'select_ln41_8', inver_aug.cpp:41 on array 'aug.V', inver_aug.cpp:30 [182]  (1.35 ns)

 <State 7>: 1.35ns
The critical path consists of the following:
	'getelementptr' operation ('aug_V_addr_1', inver_aug.cpp:37) [58]  (0 ns)
	'store' operation ('store_ln37', inver_aug.cpp:37) of variable 'shl_ln', inver_aug.cpp:37 on array 'aug.V', inver_aug.cpp:30 [119]  (1.35 ns)

 <State 8>: 1.35ns
The critical path consists of the following:
	'or' operation ('or_ln203_1', inver_aug.cpp:37) [62]  (0 ns)
	'getelementptr' operation ('aug_V_addr_5', inver_aug.cpp:37) [64]  (0 ns)
	'store' operation ('store_ln37', inver_aug.cpp:37) of variable 'shl_ln731_2', inver_aug.cpp:37 on array 'aug.V', inver_aug.cpp:30 [127]  (1.35 ns)

 <State 9>: 2.27ns
The critical path consists of the following:
	'add' operation ('add_ln203_1', inver_aug.cpp:37) [68]  (0.921 ns)
	'getelementptr' operation ('aug_V_addr_9', inver_aug.cpp:37) [70]  (0 ns)
	'store' operation ('store_ln37', inver_aug.cpp:37) of variable 'shl_ln731_4', inver_aug.cpp:37 on array 'aug.V', inver_aug.cpp:30 [135]  (1.35 ns)

 <State 10>: 2.27ns
The critical path consists of the following:
	'add' operation ('add_ln203_3', inver_aug.cpp:37) [74]  (0.921 ns)
	'getelementptr' operation ('aug_V_addr_11', inver_aug.cpp:37) [76]  (0 ns)
	'store' operation ('store_ln37', inver_aug.cpp:37) of variable 'shl_ln731_6', inver_aug.cpp:37 on array 'aug.V', inver_aug.cpp:30 [143]  (1.35 ns)

 <State 11>: 2.27ns
The critical path consists of the following:
	'add' operation ('add_ln203_5', inver_aug.cpp:37) [80]  (0.921 ns)
	'getelementptr' operation ('aug_V_addr_13', inver_aug.cpp:37) [82]  (0 ns)
	'store' operation ('store_ln37', inver_aug.cpp:37) of variable 'shl_ln731_8', inver_aug.cpp:37 on array 'aug.V', inver_aug.cpp:30 [151]  (1.35 ns)

 <State 12>: 0.755ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', inver_aug.cpp:47) [191]  (0.755 ns)

 <State 13>: 3.18ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', inver_aug.cpp:47) [191]  (0 ns)
	'add' operation ('add_ln203_17', inver_aug.cpp:51) [204]  (0.907 ns)
	'add' operation ('add_ln203_18', inver_aug.cpp:51) [205]  (0.921 ns)
	'getelementptr' operation ('aug_V_addr', inver_aug.cpp:51) [207]  (0 ns)
	'load' operation ('temp.V', inver_aug.cpp:51) on array 'aug.V', inver_aug.cpp:30 [208]  (1.35 ns)

 <State 14>: 1.35ns
The critical path consists of the following:
	'load' operation ('temp.V', inver_aug.cpp:51) on array 'aug.V', inver_aug.cpp:30 [208]  (1.35 ns)

 <State 15>: 2.27ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', inver_aug.cpp:52) [212]  (0 ns)
	'add' operation ('add_ln1265', inver_aug.cpp:53) [219]  (0.921 ns)
	'getelementptr' operation ('aug_V_addr_2', inver_aug.cpp:53) [221]  (0 ns)
	'load' operation ('__Val2__', inver_aug.cpp:53) on array 'aug.V', inver_aug.cpp:30 [222]  (1.35 ns)

 <State 16>: 3.06ns
The critical path consists of the following:
	'load' operation ('__Val2__', inver_aug.cpp:53) on array 'aug.V', inver_aug.cpp:30 [222]  (1.35 ns)
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 17>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 18>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 19>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 20>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 21>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 22>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 23>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 24>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 25>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 26>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 27>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 28>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 29>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 30>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 31>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 32>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 33>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 34>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 35>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 36>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 37>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 38>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 39>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 40>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 41>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 42>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 43>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 44>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 45>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 46>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 47>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 48>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 49>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 50>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 51>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 52>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 53>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 54>: 1.71ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)

 <State 55>: 3.06ns
The critical path consists of the following:
	'sdiv' operation ('sdiv_ln1148', inver_aug.cpp:53) [224]  (1.71 ns)
	'store' operation ('store_ln53', inver_aug.cpp:53) of variable 'trunc_ln703', inver_aug.cpp:53 on array 'aug.V', inver_aug.cpp:30 [226]  (1.35 ns)

 <State 56>: 3.18ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', inver_aug.cpp:57) [231]  (0 ns)
	'add' operation ('add_ln203_39', inver_aug.cpp:59) [244]  (0.907 ns)
	'add' operation ('add_ln203_40', inver_aug.cpp:59) [245]  (0.921 ns)
	'getelementptr' operation ('aug_V_addr_4', inver_aug.cpp:59) [247]  (0 ns)
	'load' operation ('temp.V', inver_aug.cpp:59) on array 'aug.V', inver_aug.cpp:30 [248]  (1.35 ns)

 <State 57>: 1.35ns
The critical path consists of the following:
	'load' operation ('temp.V', inver_aug.cpp:59) on array 'aug.V', inver_aug.cpp:30 [248]  (1.35 ns)

 <State 58>: 2.27ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', inver_aug.cpp:60) [252]  (0 ns)
	'add' operation ('add_ln1116', inver_aug.cpp:61) [259]  (0.921 ns)
	'getelementptr' operation ('aug_V_addr_6', inver_aug.cpp:61) [261]  (0 ns)
	'load' operation ('aug_V_load_2', inver_aug.cpp:61) on array 'aug.V', inver_aug.cpp:30 [265]  (1.35 ns)

 <State 59>: 7.16ns
The critical path consists of the following:
	'load' operation ('aug_V_load_2', inver_aug.cpp:61) on array 'aug.V', inver_aug.cpp:30 [265]  (1.35 ns)
	'mul' operation ('mul_ln1193', inver_aug.cpp:61) [267]  (3.24 ns)
	'sub' operation ('ret.V', inver_aug.cpp:61) [270]  (1.22 ns)
	'store' operation ('store_ln61', inver_aug.cpp:61) of variable 'trunc_ln2', inver_aug.cpp:61 on array 'aug.V', inver_aug.cpp:30 [272]  (1.35 ns)

 <State 60>: 3.18ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', inver_aug.cpp:69) [284]  (0 ns)
	'add' operation ('add_ln203_28', inver_aug.cpp:72) [331]  (0.907 ns)
	'add' operation ('add_ln203_29', inver_aug.cpp:72) [332]  (0.921 ns)
	'getelementptr' operation ('aug_V_addr_16', inver_aug.cpp:72) [334]  (0 ns)
	'load' operation ('aug_V_load', inver_aug.cpp:72) on array 'aug.V', inver_aug.cpp:30 [362]  (1.35 ns)

 <State 61>: 2.7ns
The critical path consists of the following:
	'load' operation ('aug_V_load', inver_aug.cpp:72) on array 'aug.V', inver_aug.cpp:30 [362]  (1.35 ns)
	'store' operation ('store_ln72', inver_aug.cpp:72) of variable 'aug_V_load', inver_aug.cpp:72 on array 'B_V' [363]  (1.35 ns)

 <State 62>: 2.7ns
The critical path consists of the following:
	'load' operation ('aug_V_load_10', inver_aug.cpp:72) on array 'aug.V', inver_aug.cpp:30 [366]  (1.35 ns)
	'store' operation ('store_ln72', inver_aug.cpp:72) of variable 'aug_V_load_10', inver_aug.cpp:72 on array 'B_V' [367]  (1.35 ns)

 <State 63>: 2.7ns
The critical path consists of the following:
	'load' operation ('aug_V_load_4', inver_aug.cpp:72) on array 'aug.V', inver_aug.cpp:30 [370]  (1.35 ns)
	'store' operation ('store_ln72', inver_aug.cpp:72) of variable 'aug_V_load_4', inver_aug.cpp:72 on array 'B_V' [371]  (1.35 ns)

 <State 64>: 2.7ns
The critical path consists of the following:
	'load' operation ('aug_V_load_6', inver_aug.cpp:72) on array 'aug.V', inver_aug.cpp:30 [374]  (1.35 ns)
	'store' operation ('store_ln72', inver_aug.cpp:72) of variable 'aug_V_load_6', inver_aug.cpp:72 on array 'B_V' [375]  (1.35 ns)

 <State 65>: 2.7ns
The critical path consists of the following:
	'load' operation ('aug_V_load_8', inver_aug.cpp:72) on array 'aug.V', inver_aug.cpp:30 [378]  (1.35 ns)
	'store' operation ('store_ln72', inver_aug.cpp:72) of variable 'aug_V_load_8', inver_aug.cpp:72 on array 'B_V' [379]  (1.35 ns)

 <State 66>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
